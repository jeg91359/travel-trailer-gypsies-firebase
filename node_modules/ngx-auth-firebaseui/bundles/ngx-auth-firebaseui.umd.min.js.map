{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-auth-firebaseui/lib/enums/accounts.enum.ts","ng://ngx-auth-firebaseui/lib/services/auth-process.service.ts","ng://ngx-auth-firebaseui/lib/services/firestore-sync.service.ts","ng://ngx-auth-firebaseui/lib/tokens/index.ts","ng://ngx-auth-firebaseui/lib/components/providers/auth.providers.component.ts","ng://ngx-auth-firebaseui/lib/components/email-confirmation/email-confirmation.component.ts","ng://ngx-auth-firebaseui/lib/components/legality-dialog/legality-dialog.component.ts","ng://ngx-auth-firebaseui/lib/animations/index.ts","ng://ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui/auth.component.ts","ng://ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component.ts","ng://ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component.ts","ng://ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component.ts","ng://ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui-user/user.component.ts","ng://ngx-auth-firebaseui/lib/interfaces/config.interface.ts","ng://ngx-auth-firebaseui/lib/guards/logged-in.guard.ts","ng://ngx-auth-firebaseui/lib/ngx-auth-firebaseui.module.ts"],"names":["Accounts","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","AuthProvider","collections","users","FirestoreSyncService","afs","prototype","getUserDocRefByUID","uid","doc","deleteUserData","delete","updateUserData","user","userRef","data","email","displayName","photoURL","phoneNumber","providerId","set","merge","AngularFirestore","Injectable","providedIn","NgxAuthFirebaseUIConfigToken","InjectionToken","UserProvidedConfigToken","facebookAuthProvider","firebase","auth","FacebookAuthProvider","googleAuthProvider","GoogleAuthProvider","appleAuthProvider","OAuthProvider","twitterAuthProvider","TwitterAuthProvider","githubAuthProvider","GithubAuthProvider","microsoftAuthProvider","yahooAuthProvider","Theme","Layout","AuthProcessService","afa","config","snackBar","fireStoreService","matSnackBarConfig","onSuccessEmitter","EventEmitter","onErrorEmitter","listenToUserEvents","_this","user$","pipe","tap","resetPassword","console","log","sendPasswordResetEmail","_a","notifyError","error_1","signInWith","provider","credentials","signInResult","ANONYMOUS","EmailAndPassword","Google","Apple","Facebook","Twitter","Github","Microsoft","Yahoo","PhoneNumber","signInAnonymously","_b","signInWithEmailAndPassword","password","signInWithPopup","Error","handleSuccess","handleError","err_1","signUp","createUserWithEmailAndPassword","userCredential","updateProfile","enableFirestoreSync","enableEmailVerification","sendEmailVerification","emailConfirmationSent","emailToConfirm","err_2","sendNewVerificationEmail","signOut","error_2","name","parseUserInfo","providerData","getUserPhotoUrl","emailVerified","getPhotoPath","CHECK","isAnonymous","OFF","NONE","image","signInWithPhoneNumber","error","e_1","toastMessageOnAuthSuccess","fallbackMessage","showToast","messageOnAuthSuccess","reloadUserInfo","reload","getMessageOnAuthError","toString","message","open","duration","showErrorToast","toastMessageOnAuthError","emit","AngularFireAuth","Inject","args","forwardRef","MatSnackBar","MatSnackBarConfig","type","MAT_SNACK_BAR_DEFAULT_OPTIONS","defaultTranslations","verifyEmailTitleText","verifyEmailConfirmationText","verifyEmailGoBackText","sendNewVerificationEmailText","signOutText","messageOnEmailConfirmationSuccess","EmailConfirmationComponent","authProcess","router","changeDetectorRef","ngOnChanges","changes","verifyEmailTemplate","currentValue","defaultTemplate","verifyEmailContext","createTemplateContext","ngOnInit","continue","navigate","goBackURL","isLoading","markForCheck","Router","ChangeDetectorRef","Input","Output","ViewChild","static","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","LegalityDialogComponent","dialogRef","_disableConfirmActionButton","tosUrl","privacyPolicyUrl","checkTOS","checkPrivacyPolicy","closeDialog","checked","disableConfirmActionButton","authProvider","close","MatDialogRef","MAT_DIALOG_DATA","customAnimation","animation","style","opacity","transform","animate","params","delay","scale","x","z","NgxAuthFirebaseuiAnimations","trigger","transition","useAnimation","state","query","stagger","animateChild","optional","EMAIL_REGEX","RegExp","join","PHONE_NUMBER_REGEX","AuthComponent","platformId","dialog","activatedRoute","providers","ALL","registrationEnabled","resetPasswordEnabled","guestEnabled","selectedTabChange","enableLengthRule","enableLowerCaseLetterRule","enableUpperCaseLetterRule","enableDigitRule","enableSpecialCharRule","onStrengthChanged","resetPasswordTabText","resetPasswordInputText","resetPasswordErrorRequiredText","resetPasswordErrorPatternText","resetPasswordActionButtonText","resetPasswordInstructionsText","signInTabText","signInCardTitleText","loginButtonText","forgotPasswordButtonText","nameText","nameErrorRequiredText","nameErrorMinLengthText","nameErrorMaxLengthText","emailText","emailErrorRequiredText","emailErrorPatternText","passwordText","passwordErrorRequiredText","passwordErrorMinLengthText","passwordErrorMaxLengthText","registerTabText","registerCardTitleText","registerButtonText","guestButtonText","emailConfirmationTitle","emailConfirmationText","authenticationError","passReset","authProviders","onSuccess","onError","isPlatformBrowser","onErrorSubscription","subscribe","min","Math","max","passwordMinLength","passwordMaxLength","chooseBackUrl","updateAuthSnackbarMessages","_initSignInFormGroupBuilder","_initSignUpFormGroupBuilder","_initResetPasswordFormGroupBuilder","ngAfterViewInit","passwordStrength","strength","messageOnAuthError","ngOnDestroy","unsubscribe","onTabChange","event","tabIndex","index","signIn","signInFormGroup","valid","createForgotPasswordTab","passwordResetWished","processLegalSignUP","afterClosed","_afterSignUpMiddleware","signUpFormGroup","reset","signUpAnonymously","resetPasswordEmailFormControl","snapshot","queryParams","redirectUrl","FormGroup","registerControl","signInEmailFormControl","FormControl","Validators","required","pattern","sigInPasswordFormControl","minLength","maxLength","sigUpNameFormControl","nameMinLength","nameMaxLength","sigUpEmailFormControl","sigUpPasswordFormControl","resetPasswordFormGroup","PLATFORM_ID","MatDialog","ActivatedRoute","MatTabGroup","MatPasswordStrengthComponent","animations","NgxAuthFirebaseuiAvatarComponent","canLogout","canDeleteAccount","onSignOut","displayNameInitials","getDisplayNameInitials","initialsRegExp","match","shift","toUpperCase","openProfile","UserComponent","componentInstance","NgxAuthFirebaseuiLoginComponent","formBuilder","titleText","rememberMeText","orLabelText","forgotPasswordText","dontHaveAnAccountText","createAccountButtonText","onCreateAccountRequested","onResetPasswordRequested","loginForm","group","login","controls","FormBuilder","encapsulation","ViewEncapsulation","None","confirmPasswordValidator","control","parent","get","passwordConfirm","passwordsNotMatching","NgxAuthFirebaseuiRegisterComponent","readAncAcceptText","termsAndConditionsText","alreadyHaveAccountText","passwordConfirmationText","passwordConfirmationErrorRequiredText","passwordErrorMatchText","onLoginRequested","unsubscribeAll","Subject","registerForm","valueChanges","takeUntil","updateValueAndValidity","complete","createAccount","canEditAccount","onAccountEdited","onAccountDeleted","changeEditMode","editMode","initUpdateFormGroup","updateFormGroup","disable","save","dirty","snackBarMsg","updateNameFormControl","updateEmailFormControl","updateEmail","updatePhoneNumberFormControl","updatePhoneNumber","catch","deleteAccount","currentUser","disabled","enable","AuthProvidersComponent","layout","ROW","themes","defaultAuthFirebaseUIConfig","authGuardFallbackURL","authGuardLoggedInURL","guardProtectedRoutesUntilEmailIsVerified","ngxAuthFirebaseUIConfigFactory","userProvidedConfig","assign","LoggedInGuard","canActivate","route","map","url","NgxAuthFirebaseUIModule","iconRegistry","sanitizer","registerProviderIcons","forRoot","configFactory","appNameFactory","ngModule","NgxAuthFirebaseUIModule_1","provide","FIREBASE_OPTIONS","useValue","FIREBASE_APP_NAME","useFactory","deps","addSvgIcon","bypassSecurityTrustResourceUrl","MatIconRegistry","DomSanitizer","NgModule","imports","CommonModule","RouterModule","HttpClientModule","FlexLayoutModule","FormsModule","ReactiveFormsModule","MatTabsModule","MatCardModule","MatInputModule","MatButtonModule","MatIconModule","MatSnackBarModule","MatDividerModule","MatChipsModule","MatTooltipModule","MatDialogModule","MatCheckboxModule","MatProgressSpinnerModule","MatProgressBarModule","MatMenuModule","MatPasswordStrengthModule","AngularFireAuthModule","AngularFirestoreModule","exports","declarations","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export enum Accounts {\n  NONE = 'account',\n  CHECK = 'account-check',\n  EDIT = 'account-edit',\n  OFF = 'account-off',\n  REMOVE = 'account-remove',\n}\n","import {EventEmitter, forwardRef, Inject, Injectable} from '@angular/core';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {firebase} from '@firebase/app';\nimport '@firebase/auth';\nimport {User, UserInfo} from 'firebase/app';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {Accounts} from '../enums';\nimport {FirestoreSyncService} from './firestore-sync.service';\nimport {MAT_SNACK_BAR_DEFAULT_OPTIONS, MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\nimport {ICredentials, ISignInProcess, ISignUpProcess, NgxAuthFirebaseUIConfig} from '../interfaces';\nimport {NgxAuthFirebaseUIConfigToken} from '../tokens';\n\n// import User = firebase.User;\n\nimport UserCredential = firebase.auth.UserCredential;\n\nexport const facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nexport const appleAuthProvider = new firebase.auth.OAuthProvider('apple.com');\nexport const twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\nexport const githubAuthProvider = new firebase.auth.GithubAuthProvider();\nexport const microsoftAuthProvider = new firebase.auth.OAuthProvider('microsoft.com');\nexport const yahooAuthProvider = new firebase.auth.OAuthProvider('yahoo.com');\n\nexport enum AuthProvider {\n  ALL = 'all',\n  ANONYMOUS = 'anonymous',\n  EmailAndPassword = 'firebase',\n  Google = 'google',\n  Apple = 'Apple',\n  Facebook = 'facebook',\n  Twitter = 'twitter',\n  Github = 'github',\n  Microsoft = 'microsoft',\n  Yahoo = 'yahoo',\n  PhoneNumber = 'phoneNumber'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthProcessService implements ISignInProcess, ISignUpProcess {\n  onSuccessEmitter: EventEmitter<any> = new EventEmitter<any>();\n  onErrorEmitter: EventEmitter<any> = new EventEmitter<any>();\n\n  // Useful to know aubout auth state even between reloads.\n  // Replace emailConfirmationSent and emailToConfirm.\n  user$: Observable<User>;\n  user: User;\n\n  messageOnAuthSuccess: string;\n  messageOnAuthError: string;\n\n  // Legacy field that is setted to true after sign up.\n  // Value is lost in case of reload. The idea here is to know if we just sent a verification email.\n  emailConfirmationSent: boolean;\n  // Lefacy filed that contain the mail to confirm. Same lifecyle than emailConfirmationSent.\n  emailToConfirm: string;\n\n  constructor(\n    public afa: AngularFireAuth,\n    @Inject(forwardRef(() => NgxAuthFirebaseUIConfigToken)) public config: NgxAuthFirebaseUIConfig,\n    private snackBar: MatSnackBar,\n    private fireStoreService: FirestoreSyncService,\n    @Inject(MAT_SNACK_BAR_DEFAULT_OPTIONS) private matSnackBarConfig: MatSnackBarConfig\n  ) {\n  }\n\n  listenToUserEvents() {\n    this.user$ = this.afa.user.pipe(\n      tap(user => {\n        this.user = user;\n      })\n    );\n  }\n\n  /**\n   * Reset the password of the ngx-auth-firebaseui-user via email\n   *\n   * @param email - the email to reset\n   */\n  public async resetPassword(email: string): Promise<void> {\n    try {\n      console.log('Password reset email sent');\n      return await this.afa.sendPasswordResetEmail(email);\n    } catch (error) {\n      return this.notifyError(error);\n    }\n  }\n\n  /**\n   * General sign in mechanism to authenticate the users with a firebase project\n   * using a traditional way, via username and password or by using an authentication provider\n   * like google, facebook, twitter and github\n   *\n   * @param provider - the provider to authenticate with (google, facebook, twitter, github)\n   // tslint:disable-next-line:no-redundant-jsdoc\n   * @param credentials\n   */\n  public async signInWith(provider: AuthProvider, credentials?: ICredentials) {\n    try {\n      let signInResult: UserCredential | any;\n\n      switch (provider) {\n        case AuthProvider.ANONYMOUS:\n          signInResult = await this.afa.signInAnonymously() as UserCredential;\n          break;\n\n        case AuthProvider.EmailAndPassword:\n          signInResult = await this.afa.signInWithEmailAndPassword(credentials.email, credentials.password) as UserCredential;\n          break;\n\n        case AuthProvider.Google:\n          signInResult = await this.afa.signInWithPopup(googleAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Apple:\n          signInResult = await this.afa.signInWithPopup(appleAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Facebook:\n          signInResult = await this.afa.signInWithPopup(facebookAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Twitter:\n          signInResult = await this.afa.signInWithPopup(twitterAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Github:\n          signInResult = await this.afa.signInWithPopup(githubAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Microsoft:\n          signInResult = await this.afa.signInWithPopup(microsoftAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.Yahoo:\n          signInResult = await this.afa.signInWithPopup(yahooAuthProvider) as UserCredential;\n          break;\n\n        case AuthProvider.PhoneNumber:\n          // coming soon - see feature/sms branch\n          break;\n\n        default:\n          throw new Error(`${AuthProvider[provider]} is not available as auth provider`);\n      }\n      await this.handleSuccess(signInResult);\n    } catch (err) {\n      this.handleError(err);\n    }\n  }\n\n  /**\n   * Sign up new users via email and password.\n   * After that the ngx-auth-firebaseui-user should verify and confirm an email sent via the firebase\n   *\n   * @param displayName - the displayName if the new ngx-auth-firebaseui-user\n   * @returns -\n   */\n  public async signUp(displayName: string, credentials: ICredentials) {\n    try {\n      const userCredential: UserCredential = await this.afa.createUserWithEmailAndPassword(credentials.email, credentials.password);\n      const user = userCredential.user;\n      await this.updateProfile(displayName, user.photoURL);\n\n      if (this.config.enableFirestoreSync) {\n        await this.fireStoreService\n          .getUserDocRefByUID(user.uid)\n          .set({\n            uid: user.uid,\n            displayName,\n            email: user.email,\n            photoURL: user.photoURL\n          } as User);\n      }\n\n      if (this.config.enableEmailVerification) {\n        await user.sendEmailVerification();\n      }\n\n      // Legacy fields\n      this.emailConfirmationSent = true;\n      this.emailToConfirm = credentials.email;\n\n      await this.handleSuccess(userCredential);\n    } catch (err) {\n      this.handleError(err);\n    }\n  }\n\n  async sendNewVerificationEmail() {\n    if (!this.user) {\n      return Promise.reject(new Error('No signed in user'));\n    }\n    return this.user.sendEmailVerification();\n  }\n\n  async signOut() {\n    try {\n      await this.afa.signOut();\n    } catch (error) {\n      this.notifyError(error);\n    }\n  }\n\n  /**\n   * Update the profile (name + photo url) of the authenticated ngx-auth-firebaseui-user in the\n   * firebase authentication feature (not in firestore)\n   *\n   * @param name - the new name of the authenticated ngx-auth-firebaseui-user\n   * @param photoURL - the new photo url of the authenticated ngx-auth-firebaseui-user\n   * @returns -\n   */\n  public updateProfile(name: string, photoURL: string): Promise<void> {\n    if (!photoURL) {\n      return this.user.updateProfile({displayName: name});\n    } else {\n      return this.user.updateProfile({displayName: name, photoURL});\n    }\n  }\n\n  public parseUserInfo(user: User): UserInfo {\n    return {\n      uid: user.uid,\n      displayName: user.displayName,\n      email: user.email,\n      phoneNumber: user.phoneNumber,\n      photoURL: user.photoURL,\n      providerId: user.providerData.length > 0 ? user.providerData[0].providerId : null\n    };\n  }\n\n  public getUserPhotoUrl(): string {\n\n    const user: firebase.User | null = this.user;\n\n    if (!user) {\n      return;\n    } else if (user.photoURL) {\n      return user.photoURL;\n    } else if (user.emailVerified) {\n      return this.getPhotoPath(Accounts.CHECK);\n    } else if (user.isAnonymous) {\n      return this.getPhotoPath(Accounts.OFF);\n    } else {\n      return this.getPhotoPath(Accounts.NONE);\n    }\n  }\n\n  public getPhotoPath(image: string) {\n    return `assets/user/${image}.svg`;\n  }\n\n  public signInWithPhoneNumber() {\n    // todo: 3.1.18\n  }\n\n  async handleSuccess(userCredential: UserCredential) {\n    this.onSuccessEmitter.next(userCredential.user);\n    if (this.config.enableFirestoreSync) {\n      try {\n        await this.fireStoreService.updateUserData(this.parseUserInfo(userCredential.user));\n      } catch (e) {\n        console.error(`Error occurred while updating user data with firestore: ${e}`);\n      }\n    }\n    if (this.config.toastMessageOnAuthSuccess) {\n      const fallbackMessage = `Hello ${userCredential.user.displayName ? userCredential.user.displayName : ''}!`;\n      this.showToast(this.messageOnAuthSuccess || fallbackMessage);\n    }\n  }\n\n  handleError(error: any) {\n    this.notifyError(error);\n    console.error(error);\n  }\n\n  // Refresh user info. Can be useful for instance to get latest status regarding email verification.\n  reloadUserInfo() {\n    return this.user.reload();\n  }\n\n  // Search for an error message.\n  // Consumers of this library are given the possibility to provide a\n  // function in case they want to instrument message based on error properties.\n  getMessageOnAuthError(error: any) {\n    // tslint:disable-next-line:no-bitwise\n    return error.toString() || 'Sorry, something went wrong. Please retry later.';\n  }\n\n  // Show a toast using current snackbar config. If message is empty, no toast is displayed allowing to opt-out when needed.\n  // Default MatSnackBarConfig has no duration, meaning it stays visible forever.\n  // If that's the case, an action button is added to allow the end-user to dismiss the toast.\n  showToast(message: string) {\n    if (message) {\n      this.snackBar.open(message, this.matSnackBarConfig.duration ? null : 'OK');\n    }\n  }\n\n  showErrorToast(error: any) {\n    if (this.config.toastMessageOnAuthError) {\n      this.showToast(this.getMessageOnAuthError(error));\n    }\n  }\n\n  notifyError(error: any) {\n    this.onErrorEmitter.emit(error);\n    this.showErrorToast(error);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {AngularFirestore, AngularFirestoreDocument} from '@angular/fire/firestore';\nimport {UserInfo} from 'firebase';\n\nexport const collections = {\n  users: 'users',\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirestoreSyncService {\n\n  constructor(public afs: AngularFirestore) {\n    // this.afs.firestore.settings({timestampsInSnapshots: true});\n  }\n\n  // get timestamp() {\n  //     return firebase.firestore.FieldValue.serverTimestamp();\n  // }\n\n  public getUserDocRefByUID(uid: string): AngularFirestoreDocument<UserInfo> {\n    return this.afs.doc(`${collections.users}/${uid}`);\n  }\n\n  public deleteUserData(uid: string): Promise<any> {\n    const userRef: AngularFirestoreDocument<UserInfo> = this.getUserDocRefByUID(uid);\n    return userRef.delete();\n  }\n\n\n  public updateUserData(user: UserInfo): Promise<any> {\n    // Sets user$ data to firestore on login\n    const userRef: AngularFirestoreDocument<UserInfo> = this.getUserDocRefByUID(user.uid);\n    const data: UserInfo = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      phoneNumber: user.phoneNumber,\n      providerId: user.providerId\n    };\n    return userRef.set(data, {merge: true});\n  }\n}\n","// This token is the official token containing the final configuration; ie. the merge between default and user provided configurations\nimport {InjectionToken} from '@angular/core';\nimport {NgxAuthFirebaseUIConfig} from '../interfaces';\n\nexport const NgxAuthFirebaseUIConfigToken = new InjectionToken<NgxAuthFirebaseUIConfig>('NgxAuthFirebaseUIConfigToken');\n// This is an intermediate token containing only user-provided configuration\nexport const UserProvidedConfigToken = new InjectionToken<NgxAuthFirebaseUIConfig>('UserProvidedConfigToken');\n","import {Component, Input, Output} from '@angular/core';\nimport {AuthProcessService, AuthProvider} from '../../services/auth-process.service';\nimport {NgxAuthFirebaseuiAnimations} from '../../animations';\n\nexport enum Theme {\n  DEFAULT = 'default',\n  CLASSIC = 'classic',\n  STROKED = 'stroked',\n  FAB = 'fab',\n  MINI_FAB = 'mini-fab',\n  RAISED = 'raised',\n}\n\nexport enum Layout {\n  ROW = 'row',\n  COLUMN = 'column'\n}\n\n@Component({\n  selector: 'ngx-auth-firebaseui-providers',\n  templateUrl: 'auth.providers.component.html',\n  styleUrls: ['auth.providers.component.scss'],\n  animations: NgxAuthFirebaseuiAnimations\n})\nexport class AuthProvidersComponent {\n\n  @Input() theme: Theme; // theme: string = Theme.DEFAULT;\n  @Input() layout: string = Layout.ROW;\n  @Input() providers: AuthProvider[] | AuthProvider = AuthProvider.ALL; //  google, facebook, twitter, github, microsoft, yahoo\n\n  @Output() onSuccess: any;\n  @Output() onError: any;\n\n  themes = Theme;\n  authProvider = AuthProvider;\n\n  constructor(public authProcess: AuthProcessService) {\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AuthProcessService} from '../../services/auth-process.service';\n\ninterface VerifyEmailContext {\n  email: string;\n  goBackURL: string;\n  verifyEmailTitleText: string;\n  verifyEmailConfirmationText: string;\n  verifyEmailGoBackText: string;\n  messageOnEmailConfirmationSuccess: string;\n  messageOnError: string;\n}\n\nconst defaultTranslations = {\n  verifyEmailTitleText: 'Confirm your e-mail address!',\n  verifyEmailConfirmationText: 'A confirmation e-mail has been sent.' +\n    ' Check your inbox and click on the link \"Confirm my e-mail\" to confirm your e-mail address.',\n  verifyEmailGoBackText: 'Go back',\n  sendNewVerificationEmailText: 'Send new confirmation e-mail',\n  signOutText: 'Sign out',\n  messageOnEmailConfirmationSuccess: 'A new confirmation e-mail has been sent. Please check your inbox.',\n};\n\n@Component({\n  selector: 'ngx-auth-firebaseui-email-confirmation',\n  templateUrl: './email-confirmation.component.html',\n  styleUrls: ['./email-confirmation.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EmailConfirmationComponent implements OnInit, OnChanges {\n\n  @Input() email: string;\n  @Input() goBackURL: string;\n  // i18n translations to use in default template\n  @Input() verifyEmailTitleText: string;\n  @Input() verifyEmailConfirmationText: string;\n  @Input() verifyEmailGoBackText: string;\n  @Input() sendNewVerificationEmailText: string;\n  @Input() signOutText: string;\n  @Input() messageOnEmailConfirmationSuccess: string;\n\n  // Template to use in place of default template\n  @Input() template: TemplateRef<any>;\n\n  @Output() signOut = new EventEmitter();\n\n  // Final template\n  verifyEmailTemplate: TemplateRef<any>;\n  // Context hash to use for verifyEmailTemplate.\n  verifyEmailContext: VerifyEmailContext;\n\n  isLoading: boolean;\n\n  @ViewChild('defaultVerifyEmail', {static: true}) defaultTemplate: TemplateRef<any>;\n\n  constructor(public authProcess: AuthProcessService, private router: Router, private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.verifyEmailTemplate && changes.verifyEmailTemplate.currentValue == null) {\n      this.verifyEmailTemplate = this.defaultTemplate;\n      console.log('ngOnChanges - defaultTemplate:', this.verifyEmailTemplate);\n    }\n    this.verifyEmailContext = this.createTemplateContext();\n  }\n\n  ngOnInit(): void {\n    if (!this.verifyEmailTemplate) {\n      console.log('ngOnInit - defaultTemplate');\n      this.verifyEmailTemplate = this.defaultTemplate;\n    }\n    this.verifyEmailContext = this.createTemplateContext();\n    console.log('verifyEmailTemplate:', this.verifyEmailTemplate);\n    console.log('verifyEmailContext:', this.verifyEmailContext);\n  }\n\n  async continue() {\n    try {\n      await this.authProcess.reloadUserInfo();\n      await this.router.navigate([this.goBackURL]);\n    } catch (error) {\n      this.authProcess.notifyError(error);\n    }\n  }\n\n  async sendNewVerificationEmail() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.sendNewVerificationEmail();\n      this.authProcess.showToast(this.verifyEmailContext.messageOnEmailConfirmationSuccess);\n    } catch (error) {\n      this.authProcess.notifyError(error);\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  private createTemplateContext(): any {\n    return {\n      email: this.email,\n      goBackURL: this.goBackURL,\n      verifyEmailTitleText: this.verifyEmailTitleText || defaultTranslations.verifyEmailTitleText,\n      verifyEmailConfirmationText: this.verifyEmailConfirmationText || defaultTranslations.verifyEmailConfirmationText,\n      verifyEmailGoBackText: this.verifyEmailGoBackText || defaultTranslations.verifyEmailGoBackText,\n      sendNewVerificationEmailText: this.sendNewVerificationEmailText || defaultTranslations.sendNewVerificationEmailText,\n      signOutText: this.signOutText || defaultTranslations.signOutText,\n      messageOnEmailConfirmationSuccess: this.messageOnEmailConfirmationSuccess || defaultTranslations.messageOnEmailConfirmationSuccess\n    };\n  }\n}\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {LegalityDialogParams, LegalityDialogResult} from '../../interfaces';\n\n@Component({\n  selector: 'ngx-auth-firebaseui-legality-dialog',\n  templateUrl: './legality-dialog.component.html',\n  styleUrls: ['./legality-dialog.component.scss']\n})\nexport class LegalityDialogComponent {\n\n  checkTOS: boolean;\n  checkPrivacyPolicy: boolean;\n\n  constructor(public dialogRef: MatDialogRef<LegalityDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: LegalityDialogParams) {\n  }\n\n  // tslint:disable-next-line:variable-name\n  private _disableConfirmActionButton = false;\n\n  get disableConfirmActionButton(): boolean {\n    if (this.data.tosUrl && this.data.privacyPolicyUrl) {\n      this._disableConfirmActionButton = !(this.checkTOS && this.checkPrivacyPolicy);\n    } else if (this.data.tosUrl && !this.data.privacyPolicyUrl) {\n      this._disableConfirmActionButton = !this.checkTOS;\n    } else if (!this.data.tosUrl && this.data.privacyPolicyUrl) {\n      this._disableConfirmActionButton = !this.checkPrivacyPolicy;\n    }\n    return this._disableConfirmActionButton;\n  }\n\n  closeDialog() {\n    const result: LegalityDialogResult = {\n      checked: !this.disableConfirmActionButton,\n      authProvider: this.data.authProvider\n    };\n    this.dialogRef.close(result);\n  }\n\n}\n","import {animate, animateChild, animation, query, stagger, state, style, transition, trigger, useAnimation} from '@angular/animations';\n\nconst customAnimation = animation(\n  [\n    style({\n      opacity: '{{opacity}}',\n      transform: 'scale({{scale}}) translate3d({{x}}, {{y}}, {{z}})'\n    }),\n    animate('{{duration}} {{delay}} cubic-bezier(0.0, 0.0, 0.2, 1)', style('*'))\n  ],\n  {\n    params: {\n      duration: '200ms',\n      delay: '0ms',\n      opacity: '0',\n      scale: '1',\n      x: '0',\n      y: '0',\n      z: '0'\n    }\n  }\n);\n\nexport const NgxAuthFirebaseuiAnimations = [\n  trigger('animate', [transition('void => *', [useAnimation(customAnimation)])]),\n\n  trigger('animateStagger', [\n    state('50', style('*')),\n    state('100', style('*')),\n    state('200', style('*')),\n\n    transition('void => 50', query('@*', [stagger('50ms', [animateChild()])], {optional: true})),\n    transition('void => 100', query('@*', [stagger('100ms', [animateChild()])], {optional: true})),\n    transition('void => 200', query('@*', [stagger('200ms', [animateChild()])], {optional: true}))\n  ]),\n];\n","import {isPlatformBrowser} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {AbstractControl, FormControl, FormGroup, Validators} from '@angular/forms';\n\n// ANGULAR MATERIAL\nimport {MatTabChangeEvent, MatTabGroup} from '@angular/material/tabs';\nimport {ThemePalette} from '@angular/material/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\n\n// ANGULAR FIRE\nimport {AngularFireAuth} from '@angular/fire/auth';\n\n// Third PARTY\nimport {MatPasswordStrengthComponent} from '@angular-material-extensions/password-strength';\n\n// RXJS\nimport {Subscription} from 'rxjs/internal/Subscription';\n\nimport {LegalityDialogComponent, Theme} from '..';\nimport {LegalityDialogParams, LegalityDialogResult, NgxAuthFirebaseUIConfig} from '../../interfaces';\nimport { AuthProcessService, AuthProvider} from '../../services/auth-process.service';\nimport {NgxAuthFirebaseuiAnimations} from '../../animations';\nimport {NgxAuthFirebaseUIConfigToken} from '../../tokens';\n\n\nexport const EMAIL_REGEX = new RegExp(['^(([^<>()[\\\\]\\\\\\.,;:\\\\s@\\\"]+(\\\\.[^<>()\\\\[\\\\]\\\\\\.,;:\\\\s@\\\"]+)*)',\n  '|(\".+\"))@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.',\n  '[0-9]{1,3}\\])|(([a-zA-Z\\\\-0-9]+\\\\.)+',\n  '[a-zA-Z]{2,}))$'].join(''));\n\n// tslint:disable-next-line:max-line-length\nexport const PHONE_NUMBER_REGEX = new RegExp(['^[+]{0,1}[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\.]{0,1}[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\\\s\\\\./0-9]{4,12}$'].join(''));\n\n@Component({\n  selector: 'ngx-auth-firebaseui',\n  templateUrl: 'auth.component.html',\n  styleUrls: ['auth.component.scss'],\n  animations: NgxAuthFirebaseuiAnimations,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AuthComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n\n  @ViewChild(MatTabGroup, {static: false}) matTabGroup: MatTabGroup;\n  @ViewChild(MatPasswordStrengthComponent, {static: false}) passwordStrength: MatPasswordStrengthComponent;\n\n  isLoading: boolean;\n  //  google, facebook, twitter, github as array or all as one single string\n  @Input() providers: AuthProvider[] | AuthProvider = AuthProvider.ALL;\n  @Input() providersTheme: Theme; // Classic, Stroked, etc.\n\n  @Input() appearance: MatFormFieldAppearance;\n  @Input() tabIndex: number | null;\n  @Input() registrationEnabled = true;\n  @Input() resetPasswordEnabled = true;\n  @Input() guestEnabled = true;\n  @Input() tosUrl: string;\n  @Input() privacyPolicyUrl: string;\n  @Input() goBackURL: string;\n  @Input() messageOnAuthSuccess: string;\n  @Input() messageOnAuthError: string;\n  @Input() messageOnEmailConfirmationSuccess: string;\n\n  // Events\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onSuccess: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onError: any;\n  @Output() selectedTabChange: EventEmitter<MatTabChangeEvent> = new EventEmitter();\n\n  // Password strength api\n  @Input() enableLengthRule = true;\n  @Input() enableLowerCaseLetterRule = true;\n  @Input() enableUpperCaseLetterRule = true;\n  @Input() enableDigitRule = true;\n  @Input() enableSpecialCharRule = true;\n  @Input() min: number;\n  @Input() max: number;\n  @Input() customValidator: RegExp;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onStrengthChanged: EventEmitter<number> = new EventEmitter();\n\n  // Verify email template to use in place of default template.\n  // See email-confirmation component\n  @Input() verifyEmailTemplate: TemplateRef<any>;\n\n  // i18n translations to use in default template for email verification.\n  // See email-confirmation component\n  @Input() verifyEmailTitleText: string;\n  @Input() verifyEmailConfirmationText: string;\n  @Input() verifyEmailGoBackText = 'Go back';\n  @Input() sendNewVerificationEmailText: string;\n  @Input() signOutText = 'Sign out';\n\n  // Customize the text\n  // Reset Password Tab\n  @Input() resetPasswordTabText = 'Reset e-mail address to password';\n  @Input() resetPasswordInputText = 'Reset e-mail address to password';\n  @Input() resetPasswordErrorRequiredText = 'E-mail is required to reset the password!';\n  @Input() resetPasswordErrorPatternText = 'Please enter a valid e-mail address';\n  @Input() resetPasswordActionButtonText = 'Reset';\n  @Input() resetPasswordInstructionsText = 'Reset requested. Check your e-mail instructions.';\n\n  // SignIn Tab\n  @Input() signInTabText = 'Sign in';\n  @Input() signInCardTitleText = 'Signing in';\n  @Input() loginButtonText = 'Log In';\n  @Input() forgotPasswordButtonText = 'Forgot Password ?';\n\n  // Common\n  @Input() nameText = 'Name';\n  @Input() nameErrorRequiredText = 'Name is required';\n  @Input() nameErrorMinLengthText = 'The name is too short!';\n  @Input() nameErrorMaxLengthText = 'The name is too long!';\n\n  @Input() emailText = 'E-mail';\n  @Input() emailErrorRequiredText = 'E-mail is required';\n  @Input() emailErrorPatternText = 'Please enter a valid e-mail address';\n\n  @Input() passwordText = 'Password';\n  @Input() passwordErrorRequiredText = 'Password is required';\n  @Input() passwordErrorMinLengthText = 'The password is too short!';\n  @Input() passwordErrorMaxLengthText = 'The password is too long!';\n\n  // Register Tab\n  @Input() registerTabText = 'Register';\n  @Input() registerCardTitleText = 'Registration';\n  @Input() registerButtonText = 'Register';\n  @Input() guestButtonText = 'continue as guest';\n\n  // email confirmation component\n  @Input() emailConfirmationTitle = 'Confirm your e-mail address!';\n  // tslint:disable-next-line:max-line-length\n  @Input() emailConfirmationText = `A confirmation e-mail has been sent to you. Check your inbox and click on the link \"Confirm my e-mail\" to confirm your e-mail address.`;\n\n  authProvider = AuthProvider;\n  passwordResetWished: boolean;\n\n  public signInFormGroup: FormGroup;\n  public signUpFormGroup: FormGroup;\n  public resetPasswordFormGroup: FormGroup;\n\n  onErrorSubscription: Subscription;\n  authenticationError = false;\n\n  passReset = false;\n  dialogRef: MatDialogRef<LegalityDialogComponent>;\n\n  authProviders = AuthProvider;\n\n  signInEmailFormControl: AbstractControl;\n  sigInPasswordFormControl: AbstractControl;\n\n  sigUpNameFormControl: AbstractControl;\n  sigUpEmailFormControl: AbstractControl;\n  sigUpPasswordFormControl: AbstractControl;\n  sigUpPasswordConfirmationFormControl: AbstractControl;\n  resetPasswordEmailFormControl: AbstractControl;\n\n  constructor(\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(forwardRef(() => NgxAuthFirebaseUIConfigToken)) public config: NgxAuthFirebaseUIConfig,\n    public auth: AngularFireAuth,\n    public authProcess: AuthProcessService,\n    public dialog: MatDialog,\n    private activatedRoute: ActivatedRoute,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  get color(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'primary';\n  }\n\n  public ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.onErrorSubscription = this.onError.subscribe(() => this.authenticationError = true);\n    }\n    this.min = this.min != null ? Math.max(this.min, this.config.passwordMinLength) : this.config.passwordMinLength;\n    this.max = this.max != null ? Math.min(this.max, this.config.passwordMaxLength) : this.config.passwordMaxLength;\n\n    this.goBackURL = this.chooseBackUrl();\n\n    this.updateAuthSnackbarMessages();\n    // auth form's initialization\n    this._initSignInFormGroupBuilder();\n    this._initSignUpFormGroupBuilder();\n    this._initResetPasswordFormGroupBuilder();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.passwordStrength) {\n      this.passwordStrength.onStrengthChanged.subscribe((strength: number) => {\n        this.onStrengthChanged.emit(strength);\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.messageOnAuthSuccess || changes.messageOnAuthError) {\n      this.updateAuthSnackbarMessages();\n    }\n    if (changes.min) {\n      this.min = this.min != null ? Math.max(this.min, this.config.passwordMinLength) : this.config.passwordMinLength;\n    }\n    if (changes.max) {\n      this.max = this.max != null ? Math.min(this.max, this.config.passwordMaxLength) : this.config.passwordMaxLength;\n    }\n    if (changes.goBackURL) {\n      this.goBackURL = this.chooseBackUrl();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.onErrorSubscription) {\n      this.onErrorSubscription.unsubscribe();\n    }\n  }\n\n  onTabChange(event: MatTabChangeEvent) {\n    this.selectedTabChange.emit(event);\n    this.tabIndex = event.index;\n  }\n\n  async signOut() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.signOut();\n    } finally {\n      this.isLoading = false;\n      this.tabIndex = 0;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  async signIn() {\n    if (!this.signInFormGroup.valid) {\n      return;\n    }\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.signInWith(this.authProviders.EmailAndPassword, {\n        email: this.signInFormGroup.value.email,\n        password: this.signInFormGroup.value.password\n      });\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  updateAuthSnackbarMessages(): void {\n    this.authProcess.messageOnAuthSuccess = this.messageOnAuthSuccess;\n    this.authProcess.messageOnAuthError = this.messageOnAuthError;\n  }\n\n  createForgotPasswordTab() {\n    this.passwordResetWished = true;\n    this.tabIndex = 2;\n    this.changeDetectorRef.markForCheck();\n  }\n\n  processLegalSignUP(authProvider?: AuthProvider) {\n    if (this.tosUrl || this.privacyPolicyUrl) {\n      const params: LegalityDialogParams = {\n        tosUrl: this.tosUrl,\n        privacyPolicyUrl: this.privacyPolicyUrl,\n        authProvider\n      };\n\n      this.dialogRef = this.dialog.open(LegalityDialogComponent, {data: params});\n      this.dialogRef.afterClosed().subscribe((result: LegalityDialogResult) => {\n        if (result && result.checked) {\n          this._afterSignUpMiddleware(result.authProvider).then(() => this.signUpFormGroup.reset());\n        }\n        this.dialogRef = null;\n      });\n    } else {\n      this._afterSignUpMiddleware(authProvider).then(() => this.signUpFormGroup.reset());\n    }\n  }\n\n  async signUp() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      return await this.authProcess.signUp(\n        this.signUpFormGroup.value.name,\n        {\n          email: this.signUpFormGroup.value.email,\n          password: this.signUpFormGroup.value.password\n        }\n      );\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n  async signUpAnonymously() {\n    try {\n      this.isLoading = true;\n      this.changeDetectorRef.markForCheck();\n      await this.authProcess.signInWith(this.authProvider.ANONYMOUS);\n    } finally {\n      this.isLoading = false;\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n\n\n  resetPassword() {\n    this.authProcess.resetPassword(this.resetPasswordEmailFormControl.value)\n      .then(() => {\n        this.passReset = true;\n        // this.tabIndex = 2;\n        this.changeDetectorRef.markForCheck();\n      });\n  }\n\n  private chooseBackUrl() {\n    return this.activatedRoute.snapshot.queryParams.redirectUrl || this.goBackURL || '/';\n  }\n\n  private _initSignInFormGroupBuilder() {\n    this.signInFormGroup = new FormGroup({});\n    this.signInFormGroup.registerControl('email', this.signInEmailFormControl = new FormControl('',\n      [\n        Validators.required,\n        Validators.pattern(EMAIL_REGEX)\n      ]));\n    this.signInFormGroup.registerControl('password', this.sigInPasswordFormControl = new FormControl('',\n      [\n        Validators.required,\n        Validators.minLength(this.min),\n        Validators.maxLength(this.max)\n      ]));\n  }\n\n  private _initSignUpFormGroupBuilder() {\n    this.signUpFormGroup = new FormGroup({\n      name: this.sigUpNameFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.minLength(this.config.nameMinLength),\n          Validators.maxLength(this.config.nameMaxLength)\n        ]),\n      email: this.sigUpEmailFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.pattern(EMAIL_REGEX)\n        ]),\n      password: this.sigUpPasswordFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.minLength(this.min),\n          Validators.maxLength(this.max),\n        ])\n    });\n  }\n\n  private _initResetPasswordFormGroupBuilder() {\n    this.resetPasswordFormGroup = new FormGroup({\n      email: this.resetPasswordEmailFormControl = new FormControl('',\n        [\n          Validators.required,\n          Validators.pattern(EMAIL_REGEX)\n        ])\n    });\n  }\n\n  private _afterSignUpMiddleware(authProvider?: AuthProvider) {\n    if (authProvider === this.authProvider.ANONYMOUS) {\n      return this.signUpAnonymously();\n    }\n    return this.signUp();\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {User} from 'firebase';\nimport {Observable} from 'rxjs';\nimport {MatDialog} from '@angular/material/dialog';\nimport {UserComponent} from '..';\n\nexport interface LinkMenuItem {\n  text: string;\n  icon?: string;\n  // tslint:disable-next-line:ban-types\n  callback?: Function;\n}\n\n@Component({\n  selector: 'ngx-auth-firebaseui-avatar',\n  templateUrl: './ngx-auth-firebaseui-avatar.component.html',\n  styleUrls: ['./ngx-auth-firebaseui-avatar.component.scss']\n})\nexport class NgxAuthFirebaseuiAvatarComponent implements OnInit {\n\n  @Input()\n  canLogout = true;\n\n  @Input()\n  links: LinkMenuItem[];\n\n  @Input()\n  canDeleteAccount = true;\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output()\n  onSignOut: EventEmitter<void> = new EventEmitter();\n\n  user: User;\n  user$: Observable<User | null>;\n  displayNameInitials: string | null;\n\n  constructor(public afa: AngularFireAuth,\n              public dialog: MatDialog) {\n  }\n\n  ngOnInit() {\n    this.user$ = this.afa.user;\n    this.user$.subscribe((user: User) => {\n      this.user = user;\n      this.displayNameInitials = user ? this.getDisplayNameInitials(user.displayName) : null;\n    });\n  }\n\n  getDisplayNameInitials(displayName: string | null): string | null {\n    if (!displayName) {\n      return null;\n    }\n    const initialsRegExp: RegExpMatchArray = displayName.match(/\\b\\w/g) || [];\n    const initials = ((initialsRegExp.shift() || '') + (initialsRegExp.pop() || '')).toUpperCase();\n    return initials;\n  }\n\n  openProfile() {\n    const dialogRef = this.dialog.open(UserComponent);\n    const instance = dialogRef.componentInstance;\n    instance.canDeleteAccount = this.canDeleteAccount;\n  }\n\n  async signOut() {\n    try {\n      await this.afa.signOut();\n      // Sign-out successful.\n      this.onSignOut.emit();\n    } catch (e) {\n      // An error happened.\n      console.error('An error happened while signing out!', e);\n    }\n  }\n}\n","import {Component, EventEmitter, Inject, Input, OnInit, Output, PLATFORM_ID, ViewEncapsulation} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AuthProcessService, AuthProvider} from '../../services/auth-process.service';\nimport {Subscription} from 'rxjs';\nimport {NgxAuthFirebaseuiAnimations} from '../../animations';\nimport {isPlatformBrowser} from '@angular/common';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\nimport {ThemePalette} from '@angular/material/core';\n\n@Component({\n  selector: 'ngx-auth-firebaseui-login',\n  templateUrl: './ngx-auth-firebaseui-login.component.html',\n  styleUrls: ['./ngx-auth-firebaseui-login.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: NgxAuthFirebaseuiAnimations\n})\nexport class NgxAuthFirebaseuiLoginComponent implements OnInit {\n\n  @Input() logoUrl: string;\n  @Input() providers: string[] | string = AuthProvider.ALL; //  google, facebook, twitter, github as array or all as one single string\n  @Input() appearance: MatFormFieldAppearance;\n  @Input() registrationEnabled = true;\n  @Input() resetPasswordEnabled = true;\n  @Input() messageOnAuthSuccess: string;\n  @Input() messageOnAuthError: string;\n\n  // i18n\n  @Input() titleText = 'LOGIN TO YOUR ACCOUNT';\n  @Input() rememberMeText = 'Remember Me';\n  @Input() loginButtonText = 'LOGIN';\n  @Input() orLabelText = 'OR';\n  @Input() forgotPasswordText = 'Forgot Password?';\n  @Input() dontHaveAnAccountText = 'Don\\'t have an account?';\n  @Input() createAccountButtonText = 'Create an account';\n\n  // i18n email\n  @Input() emailText = 'Email';\n  @Input() emailErrorRequiredText = 'Email is required';\n  @Input() emailErrorPatternText = 'Please enter a valid email address';\n\n  // i18n password\n  @Input() passwordText = 'Password';\n  @Input() passwordErrorRequiredText = 'Password is required';\n\n  // Events\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onSuccess: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onError: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onCreateAccountRequested: EventEmitter<void> = new EventEmitter<void>();\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onResetPasswordRequested: EventEmitter<void> = new EventEmitter<void>();\n\n  loginForm: FormGroup;\n  authProviders = AuthProvider;\n  onErrorSubscription: Subscription;\n  authenticationError = false;\n\n  constructor(\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) private platformId: Object,\n    public authProcess: AuthProcessService,\n    private formBuilder: FormBuilder) {\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  get color(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'primary';\n  }\n\n  get colorAccent(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'accent';\n  }\n\n  ngOnInit() {\n\n    if (isPlatformBrowser(this.platformId)) {\n      this.onErrorSubscription = this.onError.subscribe(() => this.authenticationError = true);\n    }\n\n    this.updateAuthSnackbarMessages();\n\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  public updateAuthSnackbarMessages(): void {\n    this.authProcess.messageOnAuthSuccess = this.messageOnAuthSuccess;\n    this.authProcess.messageOnAuthError = this.messageOnAuthError;\n  }\n\n  async login() {\n    return await this.authProcess.signInWith(this.authProviders.EmailAndPassword,\n      {\n        email: this.loginForm.controls.email.value,\n        password: this.loginForm.controls.password.value\n      }\n    );\n  }\n}\n","import {Component, EventEmitter, Inject, Input, OnDestroy, OnInit, Output, PLATFORM_ID, ViewEncapsulation} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\nimport {Subject, Subscription} from 'rxjs';\nimport {takeUntil} from 'rxjs/internal/operators';\n\nimport {NgxAuthFirebaseuiAnimations} from '../../animations';\nimport {AuthProcessService} from '../../services/auth-process.service';\nimport {isPlatformBrowser} from '@angular/common';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\nimport {ThemePalette} from '@angular/material/core';\n\nexport const confirmPasswordValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  if (!control.parent || !control) {\n    return null;\n  }\n\n  const password = control.parent.get('password');\n  const passwordConfirm = control.parent.get('passwordConfirm');\n\n  if (!password || !passwordConfirm) {\n    return null;\n  }\n\n  if (passwordConfirm.value === '') {\n    return null;\n  }\n\n  if (password.value === passwordConfirm.value) {\n    return null;\n  }\n\n  return {passwordsNotMatching: true};\n};\n\n@Component({\n  selector: 'ngx-auth-firebaseui-register',\n  templateUrl: './ngx-auth-firebaseui-register.component.html',\n  styleUrls: ['./ngx-auth-firebaseui-register.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: NgxAuthFirebaseuiAnimations\n})\nexport class NgxAuthFirebaseuiRegisterComponent implements OnInit, OnDestroy {\n\n  @Input() logoUrl: string;\n  @Input() appearance: MatFormFieldAppearance;\n  @Input() tosUrl: string;\n  @Input() privacyPolicyUrl: string;\n\n  // i18n common\n  @Input() titleText = 'CREATE AN ACCOUNT';\n  @Input() readAncAcceptText = 'I read and accept';\n  @Input() termsAndConditionsText = 'terms and conditions';\n  @Input() createAccountButtonText = 'CREATE AN ACCOUNT';\n  @Input() alreadyHaveAccountText = 'Already have an account?';\n  @Input() loginButtonText = 'LOGIN';\n\n  // i18n emnameail\n  @Input() nameText = 'Name';\n  @Input() nameErrorRequiredText = 'Name is required';\n\n  // i18n email\n  @Input() emailText = 'Email';\n  @Input() emailErrorRequiredText = 'Email is required';\n  @Input() emailErrorPatternText = 'Please enter a valid email address';\n\n  // i18n password\n  @Input() passwordText = 'Password';\n  @Input() passwordErrorRequiredText = 'Password is required';\n  @Input() passwordConfirmationText = 'Password Confirmation';\n  @Input() passwordConfirmationErrorRequiredText = 'Password confirmation is required';\n  @Input() passwordErrorMatchText = 'Password must match';\n\n  // Events\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onSuccess: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onError: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onLoginRequested: EventEmitter<void> = new EventEmitter<void>();\n\n  registerForm: FormGroup;\n  onErrorSubscription: Subscription;\n  authenticationError = false;\n\n  // Private\n  private unsubscribeAll: Subject<any>;\n\n  // tslint:disable-next-line:ban-types\n  constructor(@Inject(PLATFORM_ID) private platformId: Object,\n              private formBuilder: FormBuilder,\n              public authProcess: AuthProcessService) {\n    // Configure the layout\n\n    // Set the private defaults\n    this.unsubscribeAll = new Subject();\n    this.onSuccess = authProcess.onSuccessEmitter;\n    this.onError = authProcess.onErrorEmitter;\n  }\n\n  get color(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'primary';\n  }\n\n  get colorAccent(): string | ThemePalette {\n    return this.authenticationError ? 'warn' : 'accent';\n  }\n\n  ngOnInit(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.onErrorSubscription = this.onError.subscribe(() => this.authenticationError = true);\n    }\n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n      passwordConfirm: ['', [Validators.required, confirmPasswordValidator]]\n    });\n\n    // Update the validity of the 'passwordConfirm' field\n    // when the 'password' field changes\n    this.registerForm\n      .controls\n      .password\n      .valueChanges.pipe(takeUntil(this.unsubscribeAll))\n      .subscribe(() => {\n        this.registerForm.controls.passwordConfirm.updateValueAndValidity();\n      });\n  }\n\n  /**\n   * On destroy\n   */\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this.unsubscribeAll.next();\n    this.unsubscribeAll.complete();\n  }\n\n  async createAccount() {\n    return await this.authProcess.signUp(\n      this.registerForm.controls.name.value,\n      {\n        email: this.registerForm.controls.email.value,\n        password: this.registerForm.controls.password.value\n      }\n    );\n  }\n}\n","import {Component, EventEmitter, forwardRef, Inject, Input, Output} from '@angular/core';\nimport {AngularFireAuth} from '@angular/fire/auth';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {User} from 'firebase';\nimport {EMAIL_REGEX, PHONE_NUMBER_REGEX} from '..';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\nimport {NgxAuthFirebaseUIConfigToken} from '../../tokens';\nimport {NgxAuthFirebaseUIConfig} from '../../interfaces';\nimport { AuthProcessService } from '../../services/auth-process.service';\nimport { FirestoreSyncService } from '../../services/firestore-sync.service';\n\n@Component({\n  selector: 'ngx-auth-firebaseui-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\n  @Input()\n  editMode: boolean;\n\n  @Input()\n  canLogout = true;\n\n  @Input()\n  canEditAccount = true;\n\n  @Input()\n  canDeleteAccount = true;\n\n  @Input()\n  appearance: MatFormFieldAppearance;\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output()\n  onSignOut: EventEmitter<void> = new EventEmitter();\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output()\n  onAccountEdited: EventEmitter<void> = new EventEmitter();\n\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output()\n  onAccountDeleted: EventEmitter<void> = new EventEmitter();\n\n  updateFormGroup: FormGroup;\n  updateNameFormControl: FormControl;\n  updateEmailFormControl: FormControl;\n  updatePhoneNumberFormControl: FormControl;\n  updatePasswordFormControl: FormControl;\n\n  constructor(\n    public auth: AngularFireAuth,\n    public authProcess: AuthProcessService,\n    private fireStoreService: FirestoreSyncService,\n    @Inject(forwardRef(() => NgxAuthFirebaseUIConfigToken)) public config: NgxAuthFirebaseUIConfig\n  ) {\n  }\n\n  changeEditMode() {\n    this.editMode = !this.editMode;\n\n    this.editMode ? this.initUpdateFormGroup() : this.reset();\n  }\n\n  reset() {\n    this.updateFormGroup.reset();\n    this.updateFormGroup.disable();\n    this.updateFormGroup = null;\n  }\n\n  async save() {\n    if (this.updateFormGroup.dirty) {\n      const user = this.authProcess.user;\n      // ngx-auth-firebaseui-user.updateProfile()\n      // ngx-auth-firebaseui-user.updateEmail()\n      // console.log('form = ', this.updateFormGroup);\n\n      const snackBarMsg: string[] = [];\n\n      try {\n        if (this.updateNameFormControl.dirty) {\n          await user.updateProfile({displayName: this.updateNameFormControl.value});\n          snackBarMsg.push(`your name has been updated to ${user.displayName}`);\n        }\n\n        if (this.updateEmailFormControl.dirty) {\n          await user.updateEmail(this.updateEmailFormControl.value);\n          snackBarMsg.push(`your email has been updated to ${user.email}`);\n        }\n\n        if (this.updatePhoneNumberFormControl.dirty) {\n          await user.updatePhoneNumber(this.updatePhoneNumberFormControl.value);\n          console.log('phone number = ', this.updatePhoneNumberFormControl.value);\n          snackBarMsg.push(`your phone number has been updated to ${user.phoneNumber}`);\n        }\n\n        if (this.config.enableFirestoreSync) {\n          await this.fireStoreService.updateUserData(this.authProcess.parseUserInfo(user));\n        }\n\n      } catch (error) {\n        this.authProcess.showToast(error && error.message ? error.message : error);\n        console.error(error);\n      }\n\n\n      if (snackBarMsg.length > 0) {\n        this.authProcess.showToast(snackBarMsg.join('\\\\n'));\n      }\n      // this.updateFormGroup.reset();\n    }\n\n    this.editMode = false;\n  }\n\n  signOut() {\n    this.auth.signOut()\n      .then(() => this.onSignOut.emit())\n      .catch(e => console.error('An error happened while signing out!', e));\n  }\n\n  /**\n   * Delete the account of the current firebase ngx-auth-firebaseui-user\n   *\n   * On Success, emit the <onAccountDeleted> event and toast a msg!#\n   * Otherwise, log the and toast and error msg!\n   *\n   */\n  async deleteAccount() {\n    try {\n      const user = this.authProcess.user;\n\n      // await this.authProcess.deleteAccount();\n      await this.authProcess.user.delete();\n      // if (this.config.enableFirestoreSync) {\n      await this.fireStoreService.deleteUserData(user.uid);\n      // }\n      this.onAccountDeleted.emit();\n      this.editMode = false;\n      console.log('Your account has been successfully deleted!');\n      this.authProcess.showToast('Your account has been successfully deleted!');\n    } catch (error) {\n      console.log('Error while delete user account', error);\n      this.authProcess.showToast(`Error occurred while deleting your account: ${error.message}`);\n    }\n  }\n\n  protected initUpdateFormGroup() {\n    const currentUser: User = this.authProcess.user;\n    this.updateFormGroup = new FormGroup({\n      name: this.updateNameFormControl = new FormControl(\n        {value: currentUser.displayName, disabled: this.editMode},\n        [\n          Validators.required,\n          Validators.minLength(this.config.nameMinLength),\n          Validators.maxLength(this.config.nameMaxLength)\n        ]\n      ),\n\n      email: this.updateEmailFormControl = new FormControl(\n        {value: currentUser.email, disabled: this.editMode},\n        [\n          Validators.required,\n          Validators.pattern(EMAIL_REGEX)\n        ]),\n\n      phoneNumber: this.updatePhoneNumberFormControl = new FormControl(\n        {value: currentUser.phoneNumber, disabled: this.editMode},\n        [Validators.pattern(PHONE_NUMBER_REGEX)])\n    });\n\n    this.updateFormGroup.enable();\n  }\n}\n","// import * as firebase from 'firebase';\n\nexport interface NgxAuthFirebaseUIConfig {\n  // authNextURL?: string, // popup or redirect\n  // tosUrl?: string, // term of services url\n  // ppUrl?: string, // privacy policy url\n  // authProviders?: Array<AuthProvider>,\n  // languageCode?: string, // todo: 28.3.18\n  authGuardFallbackURL?: string;\n  authGuardLoggedInURL?: string;\n  enableFirestoreSync?: boolean;\n\n  // Toasts\n  toastMessageOnAuthSuccess?: boolean;\n  toastMessageOnAuthError?: boolean;\n\n  // Password length min/max in forms independently of each componenet min/max.\n  // `min/max` input parameters in components should be within this range.\n  passwordMaxLength?: number;\n  passwordMinLength?: number;\n\n  // Same as password but for the name\n  nameMaxLength?: number;\n  nameMinLength?: number;\n\n  // If set, sign-in/up form is not available until email has been verified.\n  // Plus protected routes are still protected even though user is connected.\n  guardProtectedRoutesUntilEmailIsVerified?: boolean;\n\n  // Control whether or not email verification is used\n  enableEmailVerification?: boolean;\n}\n\nexport const defaultAuthFirebaseUIConfig: NgxAuthFirebaseUIConfig = {\n  // authMethod: 'redirect',\n  // authProviders: [new GoogleAuthProvider(), new FacebookAuthProvider(), new TwitterAuthProvider(), new GithubAuthProvider()],\n  enableFirestoreSync: true,\n  toastMessageOnAuthSuccess: true,\n  toastMessageOnAuthError: true,\n  authGuardFallbackURL: '/',\n  authGuardLoggedInURL: '/',\n\n  // Password length min/max in forms independently of each componenet min/max.\n  // `min/max` input parameters in components should be within this range.\n  passwordMaxLength: 60,\n  passwordMinLength: 8,\n\n  // Same as password but for the name\n  nameMaxLength: 50,\n  nameMinLength: 2,\n\n  // If set, sign-in/up form is not available until email has been verified.\n  // Plus protected routes are still protected even though user is connected.\n  guardProtectedRoutesUntilEmailIsVerified: true,\n\n  // Default to email verification on\n  enableEmailVerification: true\n};\n\n// Merge default config with user provided config.\nexport function ngxAuthFirebaseUIConfigFactory(userProvidedConfig: NgxAuthFirebaseUIConfig): NgxAuthFirebaseUIConfig {\n  return Object.assign({}, defaultAuthFirebaseUIConfig, userProvidedConfig);\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {NgxAuthFirebaseUIConfig} from '../interfaces';\nimport {NgxAuthFirebaseUIConfigToken} from '../tokens';\nimport {AuthProcessService} from '../services/auth-process.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggedInGuard implements CanActivate {\n  constructor(\n    @Inject(NgxAuthFirebaseUIConfigToken)\n    private config: NgxAuthFirebaseUIConfig,\n    private router: Router,\n    private authProcess: AuthProcessService\n  ) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n    return this.authProcess.afa.user.pipe(\n      map(user => {\n        if (user) {\n          if (this.config.guardProtectedRoutesUntilEmailIsVerified && !user.emailVerified && !user.isAnonymous) {\n            if (this.config.authGuardFallbackURL) {\n              this.router.navigate([`${this.config.authGuardFallbackURL}`], {queryParams: {redirectUrl: state.url}});\n            }\n            return false;\n          } else {\n            return true;\n          }\n        } else {\n          if (this.config.authGuardFallbackURL) {\n            this.router.navigate([`/${this.config.authGuardFallbackURL}`], {queryParams: {redirectUrl: state.url}});\n          }\n          return false;\n        }\n      })\n    );\n  }\n}\n","// @angular/*\nimport {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {RouterModule} from '@angular/router';\nimport {FlexLayoutModule} from '@angular/flex-layout';\n// @angular/fire\nimport {FIREBASE_APP_NAME, FIREBASE_OPTIONS, FirebaseAppConfig} from '@angular/fire';\nimport {AngularFireAuthModule} from '@angular/fire/auth';\nimport {AngularFirestoreModule} from '@angular/fire/firestore';\n// @angular/material\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatIconModule, MatIconRegistry} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\nimport {MatPasswordStrengthModule} from '@angular-material-extensions/password-strength';\n\n\nimport {NgxAuthFirebaseuiLoginComponent} from './components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component';\nimport {NgxAuthFirebaseuiRegisterComponent} from './components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component';\n\n\nimport {DomSanitizer} from '@angular/platform-browser';\n// ngx-auth-firebaseui\n// components\nimport {AuthComponent} from './components/ngx-auth-firebaseui/auth.component';\nimport {UserComponent} from './components/ngx-auth-firebaseui-user/user.component';\nimport {AuthProvidersComponent} from './components/providers/auth.providers.component';\nimport {EmailConfirmationComponent} from './components/email-confirmation/email-confirmation.component';\nimport {NgxAuthFirebaseUIConfig, ngxAuthFirebaseUIConfigFactory} from './interfaces/config.interface';\nimport {NgxAuthFirebaseuiAvatarComponent} from './components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component';\nimport {LegalityDialogComponent} from './components/legality-dialog/legality-dialog.component';\n// guards\nimport {LoggedInGuard} from './guards/logged-in.guard';\n// services\nimport {FirestoreSyncService} from './services/firestore-sync.service';\nimport {AuthProcessService} from './services/auth-process.service';\nimport {NgxAuthFirebaseUIConfigToken, UserProvidedConfigToken} from './tokens';\n// interfaces\n// ###################################################################################################\n// Export module's public API\n// components\nexport {LegalityDialogComponent} from './components/legality-dialog/legality-dialog.component';\nexport {LinkMenuItem, NgxAuthFirebaseuiAvatarComponent} from './components/ngx-auth-firebaseui-avatar/ngx-auth-firebaseui-avatar.component';\nexport {UserComponent} from './components/ngx-auth-firebaseui-user/user.component';\nexport {AuthComponent} from './components/ngx-auth-firebaseui/auth.component';\nexport {AuthProvidersComponent, Layout, Theme} from './components/providers/auth.providers.component';\nexport {NgxAuthFirebaseuiLoginComponent} from './components/ngx-auth-firebaseui-login/ngx-auth-firebaseui-login.component';\nexport {NgxAuthFirebaseuiRegisterComponent} from './components/ngx-auth-firebaseui-register/ngx-auth-firebaseui-register.component';\n\n\n// guards\nexport {LoggedInGuard} from './guards/logged-in.guard';\n// interfaces\nexport {NgxAuthFirebaseUIConfig} from './interfaces/config.interface';\n// services\nexport {AuthProcessService, AuthProvider} from './services/auth-process.service';\nexport {FirestoreSyncService} from './services/firestore-sync.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    // HTTP\n    RouterModule,\n    HttpClientModule,\n    // FLEX_LAYOUT\n    FlexLayoutModule,\n    // FORMS\n    FormsModule,\n    ReactiveFormsModule,\n    // MATERIAL2\n    MatTabsModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatDividerModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatMenuModule,\n    // ANGULAR MATERIAL EXTENSIONS\n    MatPasswordStrengthModule,\n    // ANGULARFIRE2\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n  ],\n  exports: [\n    AuthComponent,\n    UserComponent,\n    NgxAuthFirebaseuiAvatarComponent,\n    AuthProvidersComponent,\n    EmailConfirmationComponent,\n    // LoggedInGuard,\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    NgxAuthFirebaseuiLoginComponent,\n    NgxAuthFirebaseuiRegisterComponent\n  ],\n  declarations: [\n    AuthComponent,\n    UserComponent,\n    NgxAuthFirebaseuiAvatarComponent,\n    AuthProvidersComponent,\n    EmailConfirmationComponent,\n    LegalityDialogComponent,\n    NgxAuthFirebaseuiLoginComponent,\n    NgxAuthFirebaseuiRegisterComponent\n  ],\n  entryComponents: [\n    UserComponent,\n    LegalityDialogComponent\n  ]\n})\nexport class NgxAuthFirebaseUIModule {\n  constructor(private iconRegistry: MatIconRegistry, private sanitizer: DomSanitizer, auth: AuthProcessService) {\n    auth.listenToUserEvents();\n    this.registerProviderIcons();\n  }\n\n  static forRoot(\n    configFactory: FirebaseAppConfig,\n    appNameFactory: () => string | undefined = () => undefined,\n    config: NgxAuthFirebaseUIConfig = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: NgxAuthFirebaseUIModule,\n      providers:\n        [\n          {\n            provide: FIREBASE_OPTIONS,\n            useValue: configFactory\n          },\n          {\n            provide: FIREBASE_APP_NAME,\n            useFactory: appNameFactory\n          },\n          {provide: UserProvidedConfigToken, useValue: config},\n          {\n            provide: NgxAuthFirebaseUIConfigToken,\n            useFactory: ngxAuthFirebaseUIConfigFactory,\n            deps: [UserProvidedConfigToken]\n          },\n          AuthProcessService,\n          FirestoreSyncService,\n          LoggedInGuard\n        ]\n    };\n  }\n\n  registerProviderIcons() {\n    this.iconRegistry\n      .addSvgIcon('google', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/google.svg'))\n      .addSvgIcon('apple', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/apple.svg'))\n      .addSvgIcon('google-colored', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/google.svg'))\n      .addSvgIcon('facebook', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/facebook.svg'))\n      .addSvgIcon('twitter', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/twitter.svg'))\n      .addSvgIcon('github', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/github-circle.svg'))\n      .addSvgIcon('microsoft', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/microsoft.svg'))\n      .addSvgIcon('yahoo', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/mdi/yahoo.svg'))\n      .addSvgIcon('phone', this.sanitizer.bypassSecurityTrustResourceUrl('/assets/phone.svg'));\n  }\n}\n"]}