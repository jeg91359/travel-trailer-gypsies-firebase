import { __awaiter, __decorate, __generator, __param } from "tslib";
import { isPlatformBrowser } from '@angular/common';
import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, forwardRef, Inject, Input, OnChanges, OnDestroy, OnInit, Output, PLATFORM_ID, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { FormControl, FormGroup, Validators } from '@angular/forms';
// ANGULAR MATERIAL
import { MatTabGroup } from '@angular/material/tabs';
import { MatDialog, MatDialogRef } from '@angular/material/dialog';
// ANGULAR FIRE
import { AngularFireAuth } from '@angular/fire/auth';
// Third PARTY
import { MatPasswordStrengthComponent } from '@angular-material-extensions/password-strength';
import { LegalityDialogComponent } from '..';
import { AuthProcessService, AuthProvider } from '../../services/auth-process.service';
import { NgxAuthFirebaseuiAnimations } from '../../animations';
import { NgxAuthFirebaseUIConfigToken } from '../../tokens';
export var EMAIL_REGEX = new RegExp(['^(([^<>()[\\]\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\.,;:\\s@\"]+)*)',
    '|(".+"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.',
    '[0-9]{1,3}\])|(([a-zA-Z\\-0-9]+\\.)+',
    '[a-zA-Z]{2,}))$'].join(''));
// tslint:disable-next-line:max-line-length
export var PHONE_NUMBER_REGEX = new RegExp(['^[+]{0,1}[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\.]{0,1}[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]{4,12}$'].join(''));
var AuthComponent = /** @class */ (function () {
    function AuthComponent(
    // tslint:disable-next-line:ban-types
    platformId, config, auth, authProcess, dialog, activatedRoute, changeDetectorRef) {
        this.platformId = platformId;
        this.config = config;
        this.auth = auth;
        this.authProcess = authProcess;
        this.dialog = dialog;
        this.activatedRoute = activatedRoute;
        this.changeDetectorRef = changeDetectorRef;
        //  google, facebook, twitter, github as array or all as one single string
        this.providers = AuthProvider.ALL;
        this.registrationEnabled = true;
        this.resetPasswordEnabled = true;
        this.guestEnabled = true;
        this.selectedTabChange = new EventEmitter();
        // Password strength api
        this.enableLengthRule = true;
        this.enableLowerCaseLetterRule = true;
        this.enableUpperCaseLetterRule = true;
        this.enableDigitRule = true;
        this.enableSpecialCharRule = true;
        // tslint:disable-next-line:no-output-on-prefix
        this.onStrengthChanged = new EventEmitter();
        this.verifyEmailGoBackText = 'Go back';
        this.signOutText = 'Sign out';
        // Customize the text
        // Reset Password Tab
        this.resetPasswordTabText = 'Reset e-mail address to password';
        this.resetPasswordInputText = 'Reset e-mail address to password';
        this.resetPasswordErrorRequiredText = 'E-mail is required to reset the password!';
        this.resetPasswordErrorPatternText = 'Please enter a valid e-mail address';
        this.resetPasswordActionButtonText = 'Reset';
        this.resetPasswordInstructionsText = 'Reset requested. Check your e-mail instructions.';
        // SignIn Tab
        this.signInTabText = 'Sign in';
        this.signInCardTitleText = 'Signing in';
        this.loginButtonText = 'Log In';
        this.forgotPasswordButtonText = 'Forgot Password ?';
        // Common
        this.nameText = 'Name';
        this.nameErrorRequiredText = 'Name is required';
        this.nameErrorMinLengthText = 'The name is too short!';
        this.nameErrorMaxLengthText = 'The name is too long!';
        this.emailText = 'E-mail';
        this.emailErrorRequiredText = 'E-mail is required';
        this.emailErrorPatternText = 'Please enter a valid e-mail address';
        this.passwordText = 'Password';
        this.passwordErrorRequiredText = 'Password is required';
        this.passwordErrorMinLengthText = 'The password is too short!';
        this.passwordErrorMaxLengthText = 'The password is too long!';
        // Register Tab
        this.registerTabText = 'Register';
        this.registerCardTitleText = 'Registration';
        this.registerButtonText = 'Register';
        this.guestButtonText = 'continue as guest';
        // email confirmation component
        this.emailConfirmationTitle = 'Confirm your e-mail address!';
        // tslint:disable-next-line:max-line-length
        this.emailConfirmationText = "A confirmation e-mail has been sent to you. Check your inbox and click on the link \"Confirm my e-mail\" to confirm your e-mail address.";
        this.authProvider = AuthProvider;
        this.authenticationError = false;
        this.passReset = false;
        this.authProviders = AuthProvider;
        this.onSuccess = authProcess.onSuccessEmitter;
        this.onError = authProcess.onErrorEmitter;
    }
    Object.defineProperty(AuthComponent.prototype, "color", {
        get: function () {
            return this.authenticationError ? 'warn' : 'primary';
        },
        enumerable: true,
        configurable: true
    });
    AuthComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (isPlatformBrowser(this.platformId)) {
            this.onErrorSubscription = this.onError.subscribe(function () { return _this.authenticationError = true; });
        }
        this.min = this.min != null ? Math.max(this.min, this.config.passwordMinLength) : this.config.passwordMinLength;
        this.max = this.max != null ? Math.min(this.max, this.config.passwordMaxLength) : this.config.passwordMaxLength;
        this.goBackURL = this.chooseBackUrl();
        this.updateAuthSnackbarMessages();
        // auth form's initialization
        this._initSignInFormGroupBuilder();
        this._initSignUpFormGroupBuilder();
        this._initResetPasswordFormGroupBuilder();
    };
    AuthComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        if (this.passwordStrength) {
            this.passwordStrength.onStrengthChanged.subscribe(function (strength) {
                _this.onStrengthChanged.emit(strength);
            });
        }
    };
    AuthComponent.prototype.ngOnChanges = function (changes) {
        if (changes.messageOnAuthSuccess || changes.messageOnAuthError) {
            this.updateAuthSnackbarMessages();
        }
        if (changes.min) {
            this.min = this.min != null ? Math.max(this.min, this.config.passwordMinLength) : this.config.passwordMinLength;
        }
        if (changes.max) {
            this.max = this.max != null ? Math.min(this.max, this.config.passwordMaxLength) : this.config.passwordMaxLength;
        }
        if (changes.goBackURL) {
            this.goBackURL = this.chooseBackUrl();
        }
    };
    AuthComponent.prototype.ngOnDestroy = function () {
        if (this.onErrorSubscription) {
            this.onErrorSubscription.unsubscribe();
        }
    };
    AuthComponent.prototype.onTabChange = function (event) {
        this.selectedTabChange.emit(event);
        this.tabIndex = event.index;
    };
    AuthComponent.prototype.signOut = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, , 2, 3]);
                        this.isLoading = true;
                        this.changeDetectorRef.markForCheck();
                        return [4 /*yield*/, this.authProcess.signOut()];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        this.isLoading = false;
                        this.tabIndex = 0;
                        this.changeDetectorRef.markForCheck();
                        return [7 /*endfinally*/];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    AuthComponent.prototype.signIn = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.signInFormGroup.valid) {
                            return [2 /*return*/];
                        }
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, , 3, 4]);
                        this.isLoading = true;
                        this.changeDetectorRef.markForCheck();
                        return [4 /*yield*/, this.authProcess.signInWith(this.authProviders.EmailAndPassword, {
                                email: this.signInFormGroup.value.email,
                                password: this.signInFormGroup.value.password
                            })];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        this.isLoading = false;
                        this.changeDetectorRef.markForCheck();
                        return [7 /*endfinally*/];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    AuthComponent.prototype.updateAuthSnackbarMessages = function () {
        this.authProcess.messageOnAuthSuccess = this.messageOnAuthSuccess;
        this.authProcess.messageOnAuthError = this.messageOnAuthError;
    };
    AuthComponent.prototype.createForgotPasswordTab = function () {
        this.passwordResetWished = true;
        this.tabIndex = 2;
        this.changeDetectorRef.markForCheck();
    };
    AuthComponent.prototype.processLegalSignUP = function (authProvider) {
        var _this = this;
        if (this.tosUrl || this.privacyPolicyUrl) {
            var params = {
                tosUrl: this.tosUrl,
                privacyPolicyUrl: this.privacyPolicyUrl,
                authProvider: authProvider
            };
            this.dialogRef = this.dialog.open(LegalityDialogComponent, { data: params });
            this.dialogRef.afterClosed().subscribe(function (result) {
                if (result && result.checked) {
                    _this._afterSignUpMiddleware(result.authProvider).then(function () { return _this.signUpFormGroup.reset(); });
                }
                _this.dialogRef = null;
            });
        }
        else {
            this._afterSignUpMiddleware(authProvider).then(function () { return _this.signUpFormGroup.reset(); });
        }
    };
    AuthComponent.prototype.signUp = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, , 2, 3]);
                        this.isLoading = true;
                        this.changeDetectorRef.markForCheck();
                        return [4 /*yield*/, this.authProcess.signUp(this.signUpFormGroup.value.name, {
                                email: this.signUpFormGroup.value.email,
                                password: this.signUpFormGroup.value.password
                            })];
                    case 1: return [2 /*return*/, _a.sent()];
                    case 2:
                        this.isLoading = false;
                        this.changeDetectorRef.markForCheck();
                        return [7 /*endfinally*/];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    AuthComponent.prototype.signUpAnonymously = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, , 2, 3]);
                        this.isLoading = true;
                        this.changeDetectorRef.markForCheck();
                        return [4 /*yield*/, this.authProcess.signInWith(this.authProvider.ANONYMOUS)];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        this.isLoading = false;
                        this.changeDetectorRef.markForCheck();
                        return [7 /*endfinally*/];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    AuthComponent.prototype.resetPassword = function () {
        var _this = this;
        this.authProcess.resetPassword(this.resetPasswordEmailFormControl.value)
            .then(function () {
            _this.passReset = true;
            // this.tabIndex = 2;
            _this.changeDetectorRef.markForCheck();
        });
    };
    AuthComponent.prototype.chooseBackUrl = function () {
        return this.activatedRoute.snapshot.queryParams.redirectUrl || this.goBackURL || '/';
    };
    AuthComponent.prototype._initSignInFormGroupBuilder = function () {
        this.signInFormGroup = new FormGroup({});
        this.signInFormGroup.registerControl('email', this.signInEmailFormControl = new FormControl('', [
            Validators.required,
            Validators.pattern(EMAIL_REGEX)
        ]));
        this.signInFormGroup.registerControl('password', this.sigInPasswordFormControl = new FormControl('', [
            Validators.required,
            Validators.minLength(this.min),
            Validators.maxLength(this.max)
        ]));
    };
    AuthComponent.prototype._initSignUpFormGroupBuilder = function () {
        this.signUpFormGroup = new FormGroup({
            name: this.sigUpNameFormControl = new FormControl('', [
                Validators.required,
                Validators.minLength(this.config.nameMinLength),
                Validators.maxLength(this.config.nameMaxLength)
            ]),
            email: this.sigUpEmailFormControl = new FormControl('', [
                Validators.required,
                Validators.pattern(EMAIL_REGEX)
            ]),
            password: this.sigUpPasswordFormControl = new FormControl('', [
                Validators.required,
                Validators.minLength(this.min),
                Validators.maxLength(this.max),
            ])
        });
    };
    AuthComponent.prototype._initResetPasswordFormGroupBuilder = function () {
        this.resetPasswordFormGroup = new FormGroup({
            email: this.resetPasswordEmailFormControl = new FormControl('', [
                Validators.required,
                Validators.pattern(EMAIL_REGEX)
            ])
        });
    };
    AuthComponent.prototype._afterSignUpMiddleware = function (authProvider) {
        if (authProvider === this.authProvider.ANONYMOUS) {
            return this.signUpAnonymously();
        }
        return this.signUp();
    };
    AuthComponent.ctorParameters = function () { return [
        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [forwardRef(function () { return NgxAuthFirebaseUIConfigToken; }),] }] },
        { type: AngularFireAuth },
        { type: AuthProcessService },
        { type: MatDialog },
        { type: ActivatedRoute },
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        ViewChild(MatTabGroup, { static: false })
    ], AuthComponent.prototype, "matTabGroup", void 0);
    __decorate([
        ViewChild(MatPasswordStrengthComponent, { static: false })
    ], AuthComponent.prototype, "passwordStrength", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "providers", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "providersTheme", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "appearance", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "tabIndex", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "registrationEnabled", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "resetPasswordEnabled", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "guestEnabled", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "tosUrl", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "privacyPolicyUrl", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "goBackURL", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "messageOnAuthSuccess", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "messageOnAuthError", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "messageOnEmailConfirmationSuccess", void 0);
    __decorate([
        Output()
    ], AuthComponent.prototype, "onSuccess", void 0);
    __decorate([
        Output()
    ], AuthComponent.prototype, "onError", void 0);
    __decorate([
        Output()
    ], AuthComponent.prototype, "selectedTabChange", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "enableLengthRule", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "enableLowerCaseLetterRule", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "enableUpperCaseLetterRule", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "enableDigitRule", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "enableSpecialCharRule", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "min", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "max", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "customValidator", void 0);
    __decorate([
        Output()
    ], AuthComponent.prototype, "onStrengthChanged", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "verifyEmailTemplate", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "verifyEmailTitleText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "verifyEmailConfirmationText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "verifyEmailGoBackText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "sendNewVerificationEmailText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "signOutText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "resetPasswordTabText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "resetPasswordInputText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "resetPasswordErrorRequiredText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "resetPasswordErrorPatternText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "resetPasswordActionButtonText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "resetPasswordInstructionsText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "signInTabText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "signInCardTitleText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "loginButtonText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "forgotPasswordButtonText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "nameText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "nameErrorRequiredText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "nameErrorMinLengthText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "nameErrorMaxLengthText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "emailText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "emailErrorRequiredText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "emailErrorPatternText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "passwordText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "passwordErrorRequiredText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "passwordErrorMinLengthText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "passwordErrorMaxLengthText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "registerTabText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "registerCardTitleText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "registerButtonText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "guestButtonText", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "emailConfirmationTitle", void 0);
    __decorate([
        Input()
    ], AuthComponent.prototype, "emailConfirmationText", void 0);
    AuthComponent = __decorate([
        Component({
            selector: 'ngx-auth-firebaseui',
            template: "<ng-container *ngIf=\"authProcess.user$ | async as user; else showForm\">\n\n  <!-- This component will be shown when:\n    - we just sent a verification mail (notably after sign up)\n    - we arrived from the guard after trying to access a protected route even though we are connected\n  -->\n  <div\n    *ngIf=\"(config.guardProtectedRoutesUntilEmailIsVerified && !user.emailVerified) || (authProcess.emailConfirmationSent && !user.emailVerified); else signedInUser\"\n    fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <ngx-auth-firebaseui-email-confirmation\n      (signOut)=\"signOut()\"\n      [email]=\"user.email\"\n      [goBackURL]=\"goBackURL\"\n      [messageOnEmailConfirmationSuccess]=\"messageOnEmailConfirmationSuccess\"\n      [sendNewVerificationEmailText]=\"sendNewVerificationEmailText\"\n      [signOutText]=\"signOutText\"\n      [template]=\"verifyEmailTemplate\"\n      [verifyEmailConfirmationText]=\"verifyEmailConfirmationText\"\n      [verifyEmailGoBackText]=\"verifyEmailGoBackText\"\n      [verifyEmailTitleText]=\"verifyEmailTitleText\">\n    </ngx-auth-firebaseui-email-confirmation>\n  </div>\n\n  <ng-template #signedInUser>\n    <div class=\"signed-in-container\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n      <img *ngIf=\"user?.photoURL; else noPhoto\" [src]=\"user?.photoURL\" class=\"account-circle\">\n      <ng-template #noPhoto>\n        <mat-icon class=\"account-circle\">account_circle</mat-icon>\n      </ng-template>\n      <div class=\"user-display-name mat-title\">{{ user?.displayName }}</div>\n      <div class=\"user-email mat-body-2\">{{ user?.email }}</div>\n      <div class=\"actions\">\n        <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n        <a [routerLink]=\"goBackURL\" class=\"go-back-button action-button\" color=\"primary\"\n           mat-stroked-button>{{ verifyEmailGoBackText }}</a>\n        <button (click)=\"signOut()\" class=\"sign-out-button action-button\" color=\"warn\"\n                mat-stroked-button>{{ signOutText }}</button>\n      </div>\n    </div>\n  </ng-template>\n\n</ng-container>\n\n<ng-template #showForm>\n  <mat-tab-group (selectedTabChange)=\"onTabChange($event)\" [color]=\"color\" [selectedIndex]=\"tabIndex\">\n    <!--Sign in tab-->\n    <mat-tab [label]=\"signInTabText\">\n      <mat-card>\n        <mat-card-title>{{signInCardTitleText}}</mat-card-title>\n        <mat-card-content>\n          <form (ngSubmit)=\"signIn()\"\n                [@animateStagger]=\"{ value: '50' }\"\n                [formGroup]=\"signInFormGroup\">\n            <div fxLayout=\"column\" fxLayoutAlign=\"center\">\n              <mat-form-field [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                              [appearance]=\"appearance\">\n                <mat-label>{{emailText}}</mat-label>\n                <input formControlName=\"email\"\n                       matInput\n                       required>\n                <mat-icon [color]=\"color\" matSuffix>email</mat-icon>\n                <mat-error *ngIf=\"signInEmailFormControl.hasError('required')\">\n                  {{emailErrorRequiredText}}\n                </mat-error>\n                <mat-error *ngIf=\"signInEmailFormControl.hasError('pattern')\">\n                  {{emailErrorPatternText}}\n                </mat-error>\n              </mat-form-field>\n\n              <mat-form-field [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\"\n                              [appearance]=\"appearance\">\n                <mat-label>{{passwordText}}</mat-label>\n                <input [maxlength]=\"max\" [minlength]=\"min\" [type]=\"togglePass.type\" formControlName=\"password\" matInput\n                       required/>\n                <mat-pass-toggle-visibility #togglePass matSuffix></mat-pass-toggle-visibility>\n                <mat-icon [color]=\"color\" matSuffix>lock</mat-icon>\n                <mat-hint align=\"end\" aria-live=\"polite\"> {{ signInFormGroup.value.password.length }}\n                  / {{ max }} </mat-hint>\n                <mat-error *ngIf=\"sigInPasswordFormControl.hasError('required')\">\n                  {{passwordErrorRequiredText}}\n                </mat-error>\n                <mat-error *ngIf=\"sigInPasswordFormControl.hasError('minlength')\">\n                  {{ passwordErrorMinLengthText }}\n                </mat-error>\n                <mat-error *ngIf=\"sigInPasswordFormControl.hasError('maxlength')\">\n                  {{ passwordErrorMaxLengthText }}\n                </mat-error>\n              </mat-form-field>\n\n              <button [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n                      [color]=\"color\"\n                      [disabled]=\"signInFormGroup.invalid\"\n                      class=\"space-top\"\n                      mat-raised-button\n                      style=\"margin-top: 20px\"\n                      type=\"submit\">\n                {{loginButtonText}}\n              </button>\n\n            </div>\n          </form>\n\n          <div fxLayoutAlign=\"center\">\n            <button (click)=\"createForgotPasswordTab()\"\n                    *ngIf=\"resetPasswordEnabled\"\n                    [@animate]=\"{ value: '*', params: { x: '-50px' } }\"\n                    [color]=\"color\"\n                    class=\"space-top\"\n                    mat-button>\n              {{forgotPasswordButtonText}}\n            </button>\n          </div>\n\n        </mat-card-content>\n        <mat-card-footer *ngIf=\"isLoading\">\n          <mat-progress-bar [@animate]=\"{ value: '*', params: { z: '50px', delay: '50ms', scale: '0.2' } }\"\n                            mode=\"indeterminate\"></mat-progress-bar>\n        </mat-card-footer>\n      </mat-card>\n    </mat-tab>\n\n    <!--tab register-->\n    <mat-tab *ngIf=\"registrationEnabled\" [label]=\"registerTabText\">\n      <mat-card>\n        <mat-card-title>{{registerCardTitleText}}</mat-card-title>\n        <mat-card-content fxLayout=\"column\" fxLayoutAlign=\"center\">\n          <form (ngSubmit)=\"signUpFormGroup.valid &&\n            processLegalSignUP(authProvider.EmailAndPassword)\"\n                [@animateStagger]=\"{ value: '50' }\" [formGroup]=\"signUpFormGroup\">\n            <div fxLayout=\"column\" fxLayoutAlign=\"center\">\n              <!--name-->\n              <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n                              [appearance]=\"appearance\">\n                <!--labels will work only with @angular/material@6.2.0 -->\n                <mat-label>{{nameText}}</mat-label>\n                <input\n                  [formControl]=\"sigUpNameFormControl\"\n                  [maxlength]=\"config.nameMaxLength\"\n                  [minlength]=\"config.nameMinLength\"\n                  matInput\n                  required\n                />\n                <mat-icon [color]=\"color\" matSuffix>person</mat-icon>\n                <mat-hint align=\"end\" aria-live=\"polite\"> {{ signUpFormGroup.value.name?.length }}\n                  / {{ config.nameMaxLength }} </mat-hint>\n                <mat-error *ngIf=\"sigUpNameFormControl.hasError('required')\">\n                  {{nameErrorRequiredText}}\n                </mat-error>\n                <mat-error *ngIf=\"sigUpNameFormControl.hasError('minlength')\">\n                  {{nameErrorMinLengthText}}\n                </mat-error>\n                <mat-error *ngIf=\"sigUpNameFormControl.hasError('maxlength')\">\n                  {{nameErrorMaxLengthText}}\n                </mat-error>\n              </mat-form-field>\n\n              <!--email-->\n              <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n                              [appearance]=\"appearance\">\n                <mat-label>{{emailText}}</mat-label>\n                <input [formControl]=\"sigUpEmailFormControl\"\n                       matInput\n                       required\n                       type=\"email\">\n                <mat-icon [color]=\"color\" matSuffix>email</mat-icon>\n                <mat-error *ngIf=\"sigUpEmailFormControl.hasError('required')\">\n                  {{emailErrorRequiredText}}\n                </mat-error>\n                <mat-error *ngIf=\"sigUpEmailFormControl.hasError('pattern')\">\n                  {{emailErrorPatternText}}\n                </mat-error>\n              </mat-form-field>\n\n              <!--password-->\n              <div fxLayout=\"column\">\n                <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n                                [appearance]=\"appearance\">\n                  <mat-label>{{passwordText}}</mat-label>\n                  <input\n                    [formControl]=\"sigUpPasswordFormControl\"\n                    [maxlength]=\"max\"\n                    [minlength]=\"min\"\n                    [type]=\"toggle.type\"\n                    matInput\n                    name=\"password\"\n                    required\n                  />\n                  <mat-pass-toggle-visibility #toggle matSuffix></mat-pass-toggle-visibility>\n\n                  <mat-icon [color]=\"color\" matSuffix>lock</mat-icon>\n\n                  <mat-hint align=\"end\" aria-live=\"polite\">\n                    {{signUpFormGroup.value.password?.length}} / {{ max }}\n                  </mat-hint>\n\n                  <mat-error *ngIf=\"sigUpPasswordFormControl.hasError('required')\" class=\"cut-text\">\n                    {{passwordErrorRequiredText}}\n                  </mat-error>\n\n                  <mat-error *ngIf=\"sigUpPasswordFormControl.hasError('minlength')\" class=\"cut-text\">\n                    {{ passwordErrorMinLengthText }}\n                  </mat-error>\n                  <mat-error *ngIf=\"sigUpPasswordFormControl.hasError('maxlength')\" class=\"cut-text\">\n                    {{ passwordErrorMaxLengthText }}\n                  </mat-error>\n\n                </mat-form-field>\n\n                <mat-password-strength #passwordStrength\n                                       [customValidator]=\"customValidator\"\n                                       [enableDigitRule]=\"enableDigitRule\"\n                                       [enableLengthRule]=\"enableLengthRule\"\n                                       [enableLowerCaseLetterRule]=\"enableLowerCaseLetterRule\"\n                                       [enableSpecialCharRule]=\"enableSpecialCharRule\"\n                                       [enableUpperCaseLetterRule]=\"enableUpperCaseLetterRule\"\n                                       [externalError]=\"sigUpPasswordFormControl.dirty\"\n                                       [max]=\"max\"\n                                       [min]=\"min\"\n                                       [password]=\"signUpFormGroup.value.password\">\n                </mat-password-strength>\n\n              </div>\n\n              <button [@animate]=\"{ value: '*', params: { x: '100px' } }\"\n                      [color]=\"color\"\n                      [disabled]=\"signUpFormGroup.invalid\"\n                      mat-raised-button\n                      style=\"margin-top: 20px\"\n                      type=\"submit\">\n                {{registerButtonText}}\n              </button>\n\n            </div>\n          </form>\n\n          <button (click)=\"processLegalSignUP(authProvider.ANONYMOUS)\"\n                  *ngIf=\"guestEnabled\"\n                  [@animate]=\"{ value: '*', params: { x: '-100px' } }\"\n                  [color]=\"color\"\n                  mat-button\n                  style=\"margin-top: 20px\">\n            <mat-icon>fingerprint</mat-icon>\n            {{guestButtonText}}\n          </button>\n\n        </mat-card-content>\n\n        <mat-card-footer *ngIf=\"isLoading\">\n          <mat-progress-bar [@animate]=\"{ value: '*', params: { z: '50px', delay: '50ms', scale: '0.2' } }\"\n                            mode=\"indeterminate\"></mat-progress-bar>\n        </mat-card-footer>\n\n      </mat-card>\n    </mat-tab>\n\n    <!--Reset password tab-->\n    <mat-tab *ngIf=\"passwordResetWished\" class=\"reset-password-tab\">\n      <ng-template mat-tab-label>\n        <button (click)=\"passwordResetWished = false\" class=\"reset-password-tab__close-button\" mat-icon-button>\n          {{ resetPasswordTabText }}\n          <mat-icon>close</mat-icon>\n        </button>\n      </ng-template>\n      <form (ngSubmit)=\"resetPasswordFormGroup.valid && resetPassword()\"\n            [@animateStagger]=\"{ value: '50' }\"\n            [formGroup]=\"resetPasswordFormGroup\">\n        <mat-card class=\"reset-password-card\">\n          <mat-card-content>\n            <mat-form-field [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\" [appearance]=\"appearance\"\n                            class=\"full-width\">\n              <mat-label> {{ resetPasswordInputText }} </mat-label>\n              <input [title]=\"resetPasswordInputText\"\n                     formControlName=\"email\"\n                     matInput\n                     required>\n              <mat-icon [color]=\"color\" matSuffix>email</mat-icon>\n              <mat-error *ngIf=\"resetPasswordEmailFormControl.hasError('required')\">\n                {{resetPasswordErrorRequiredText}}\n              </mat-error>\n              <mat-error *ngIf=\"resetPasswordEmailFormControl.hasError('pattern')\">\n                {{resetPasswordErrorPatternText}}\n              </mat-error>\n            </mat-form-field>\n            <p *ngIf=\"passReset\">{{resetPasswordInstructionsText}}</p>\n          </mat-card-content>\n          <mat-card-actions fxLayoutAlign=\"center\">\n            <mat-progress-bar *ngIf=\"isLoading\" mode=\"indeterminate\"></mat-progress-bar>\n            <button [@animate]=\"{ value: '*', params: { x: '50px' } }\"\n                    [color]=\"color\"\n                    mat-raised-button\n                    type=\"submit\">\n              {{resetPasswordActionButtonText}}\n            </button>\n          </mat-card-actions>\n        </mat-card>\n      </form>\n    </mat-tab>\n\n  </mat-tab-group>\n  <mat-divider></mat-divider>\n  <ngx-auth-firebaseui-providers *ngIf=\"tabIndex !== 2\"\n                                 [providers]=\"providers\"\n                                 [theme]=\"providersTheme\">\n  </ngx-auth-firebaseui-providers>\n</ng-template>\n",
            animations: NgxAuthFirebaseuiAnimations,
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [".mat-card{margin:2rem}.space-top{margin-top:.5rem}.full-width{width:100%}.cut-text{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.signed-in-container .account-circle{font-size:12rem;width:12rem;height:12rem}.signed-in-container img.account-circle{-o-object-fit:cover;object-fit:cover;border-radius:50%}.signed-in-container .sign-out-button{margin-top:2rem}.signed-in-container .user-display-name{margin-top:1rem}.signed-in-container .user-email{margin-top:-1rem}.signed-in-container .actions{margin-top:2rem}.signed-in-container .actions .action-button,.signed-in-container .actions mat-progress-bar{width:100%}.signed-in-container .actions .action-button{margin-top:1rem}.reset-password-tab mat-progress-bar{margin-bottom:1rem}.reset-password-tab__close-button{width:100%;display:flex;justify-content:space-between;align-items:center}.reset-password-tab__close-button mat-icon{font-size:18px;position:relative;top:-1px}"]
        }),
        __param(0, Inject(PLATFORM_ID)),
        __param(1, Inject(forwardRef(function () { return NgxAuthFirebaseUIConfigToken; })))
    ], AuthComponent);
    return AuthComponent;
}());
export { AuthComponent };
//# sourceMappingURL=data:application/json;base64,