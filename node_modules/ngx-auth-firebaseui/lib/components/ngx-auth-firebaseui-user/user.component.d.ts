import { EventEmitter } from '@angular/core';
import { AngularFireAuth } from '@angular/fire/auth';
import { FormControl, FormGroup } from '@angular/forms';
import { MatFormFieldAppearance } from '@angular/material/form-field';
import { NgxAuthFirebaseUIConfig } from '../../interfaces';
import { AuthProcessService } from '../../services/auth-process.service';
import { FirestoreSyncService } from '../../services/firestore-sync.service';
import * as ɵngcc0 from '@angular/core';
export declare class UserComponent {
    auth: AngularFireAuth;
    authProcess: AuthProcessService;
    private fireStoreService;
    config: NgxAuthFirebaseUIConfig;
    editMode: boolean;
    canLogout: boolean;
    canEditAccount: boolean;
    canDeleteAccount: boolean;
    appearance: MatFormFieldAppearance;
    onSignOut: EventEmitter<void>;
    onAccountEdited: EventEmitter<void>;
    onAccountDeleted: EventEmitter<void>;
    updateFormGroup: FormGroup;
    updateNameFormControl: FormControl;
    updateEmailFormControl: FormControl;
    updatePhoneNumberFormControl: FormControl;
    updatePasswordFormControl: FormControl;
    constructor(auth: AngularFireAuth, authProcess: AuthProcessService, fireStoreService: FirestoreSyncService, config: NgxAuthFirebaseUIConfig);
    changeEditMode(): void;
    reset(): void;
    save(): Promise<void>;
    signOut(): void;
    /**
     * Delete the account of the current firebase ngx-auth-firebaseui-user
     *
     * On Success, emit the <onAccountDeleted> event and toast a msg!#
     * Otherwise, log the and toast and error msg!
     *
     */
    deleteAccount(): Promise<void>;
    protected initUpdateFormGroup(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<UserComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<UserComponent, "ngx-auth-firebaseui-user", never, {
    "canLogout": "canLogout";
    "canEditAccount": "canEditAccount";
    "canDeleteAccount": "canDeleteAccount";
    "editMode": "editMode";
    "appearance": "appearance";
}, {
    "onSignOut": "onSignOut";
    "onAccountEdited": "onAccountEdited";
    "onAccountDeleted": "onAccountDeleted";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsidXNlci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFPQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFuZ3VsYXJGaXJlQXV0aCB9IGZyb20gJ0Bhbmd1bGFyL2ZpcmUvYXV0aCc7XG5pbXBvcnQgeyBGb3JtQ29udHJvbCwgRm9ybUdyb3VwIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgTWF0Rm9ybUZpZWxkQXBwZWFyYW5jZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2Zvcm0tZmllbGQnO1xuaW1wb3J0IHsgTmd4QXV0aEZpcmViYXNlVUlDb25maWcgfSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzJztcbmltcG9ydCB7IEF1dGhQcm9jZXNzU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2F1dGgtcHJvY2Vzcy5zZXJ2aWNlJztcbmltcG9ydCB7IEZpcmVzdG9yZVN5bmNTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvZmlyZXN0b3JlLXN5bmMuc2VydmljZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBVc2VyQ29tcG9uZW50IHtcbiAgICBhdXRoOiBBbmd1bGFyRmlyZUF1dGg7XG4gICAgYXV0aFByb2Nlc3M6IEF1dGhQcm9jZXNzU2VydmljZTtcbiAgICBwcml2YXRlIGZpcmVTdG9yZVNlcnZpY2U7XG4gICAgY29uZmlnOiBOZ3hBdXRoRmlyZWJhc2VVSUNvbmZpZztcbiAgICBlZGl0TW9kZTogYm9vbGVhbjtcbiAgICBjYW5Mb2dvdXQ6IGJvb2xlYW47XG4gICAgY2FuRWRpdEFjY291bnQ6IGJvb2xlYW47XG4gICAgY2FuRGVsZXRlQWNjb3VudDogYm9vbGVhbjtcbiAgICBhcHBlYXJhbmNlOiBNYXRGb3JtRmllbGRBcHBlYXJhbmNlO1xuICAgIG9uU2lnbk91dDogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuICAgIG9uQWNjb3VudEVkaXRlZDogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuICAgIG9uQWNjb3VudERlbGV0ZWQ6IEV2ZW50RW1pdHRlcjx2b2lkPjtcbiAgICB1cGRhdGVGb3JtR3JvdXA6IEZvcm1Hcm91cDtcbiAgICB1cGRhdGVOYW1lRm9ybUNvbnRyb2w6IEZvcm1Db250cm9sO1xuICAgIHVwZGF0ZUVtYWlsRm9ybUNvbnRyb2w6IEZvcm1Db250cm9sO1xuICAgIHVwZGF0ZVBob25lTnVtYmVyRm9ybUNvbnRyb2w6IEZvcm1Db250cm9sO1xuICAgIHVwZGF0ZVBhc3N3b3JkRm9ybUNvbnRyb2w6IEZvcm1Db250cm9sO1xuICAgIGNvbnN0cnVjdG9yKGF1dGg6IEFuZ3VsYXJGaXJlQXV0aCwgYXV0aFByb2Nlc3M6IEF1dGhQcm9jZXNzU2VydmljZSwgZmlyZVN0b3JlU2VydmljZTogRmlyZXN0b3JlU3luY1NlcnZpY2UsIGNvbmZpZzogTmd4QXV0aEZpcmViYXNlVUlDb25maWcpO1xuICAgIGNoYW5nZUVkaXRNb2RlKCk6IHZvaWQ7XG4gICAgcmVzZXQoKTogdm9pZDtcbiAgICBzYXZlKCk6IFByb21pc2U8dm9pZD47XG4gICAgc2lnbk91dCgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIERlbGV0ZSB0aGUgYWNjb3VudCBvZiB0aGUgY3VycmVudCBmaXJlYmFzZSBuZ3gtYXV0aC1maXJlYmFzZXVpLXVzZXJcbiAgICAgKlxuICAgICAqIE9uIFN1Y2Nlc3MsIGVtaXQgdGhlIDxvbkFjY291bnREZWxldGVkPiBldmVudCBhbmQgdG9hc3QgYSBtc2chI1xuICAgICAqIE90aGVyd2lzZSwgbG9nIHRoZSBhbmQgdG9hc3QgYW5kIGVycm9yIG1zZyFcbiAgICAgKlxuICAgICAqL1xuICAgIGRlbGV0ZUFjY291bnQoKTogUHJvbWlzZTx2b2lkPjtcbiAgICBwcm90ZWN0ZWQgaW5pdFVwZGF0ZUZvcm1Hcm91cCgpOiB2b2lkO1xufVxuIl19