import { AfterViewInit, ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { AbstractControl, FormGroup } from '@angular/forms';
import { MatTabChangeEvent, MatTabGroup } from '@angular/material/tabs';
import { ThemePalette } from '@angular/material/core';
import { MatDialog, MatDialogRef } from '@angular/material/dialog';
import { MatFormFieldAppearance } from '@angular/material/form-field';
import { AngularFireAuth } from '@angular/fire/auth';
import { MatPasswordStrengthComponent } from '@angular-material-extensions/password-strength';
import { Subscription } from 'rxjs/internal/Subscription';
import { LegalityDialogComponent, Theme } from '..';
import { NgxAuthFirebaseUIConfig } from '../../interfaces';
import { AuthProcessService, AuthProvider } from '../../services/auth-process.service';
import * as ɵngcc0 from '@angular/core';
export declare const EMAIL_REGEX: RegExp;
export declare const PHONE_NUMBER_REGEX: RegExp;
export declare class AuthComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {
    private platformId;
    config: NgxAuthFirebaseUIConfig;
    auth: AngularFireAuth;
    authProcess: AuthProcessService;
    dialog: MatDialog;
    private activatedRoute;
    private changeDetectorRef;
    matTabGroup: MatTabGroup;
    passwordStrength: MatPasswordStrengthComponent;
    isLoading: boolean;
    providers: AuthProvider[] | AuthProvider;
    providersTheme: Theme;
    appearance: MatFormFieldAppearance;
    tabIndex: number | null;
    registrationEnabled: boolean;
    resetPasswordEnabled: boolean;
    guestEnabled: boolean;
    tosUrl: string;
    privacyPolicyUrl: string;
    goBackURL: string;
    messageOnAuthSuccess: string;
    messageOnAuthError: string;
    messageOnEmailConfirmationSuccess: string;
    onSuccess: any;
    onError: any;
    selectedTabChange: EventEmitter<MatTabChangeEvent>;
    enableLengthRule: boolean;
    enableLowerCaseLetterRule: boolean;
    enableUpperCaseLetterRule: boolean;
    enableDigitRule: boolean;
    enableSpecialCharRule: boolean;
    min: number;
    max: number;
    customValidator: RegExp;
    onStrengthChanged: EventEmitter<number>;
    verifyEmailTemplate: TemplateRef<any>;
    verifyEmailTitleText: string;
    verifyEmailConfirmationText: string;
    verifyEmailGoBackText: string;
    sendNewVerificationEmailText: string;
    signOutText: string;
    resetPasswordTabText: string;
    resetPasswordInputText: string;
    resetPasswordErrorRequiredText: string;
    resetPasswordErrorPatternText: string;
    resetPasswordActionButtonText: string;
    resetPasswordInstructionsText: string;
    signInTabText: string;
    signInCardTitleText: string;
    loginButtonText: string;
    forgotPasswordButtonText: string;
    nameText: string;
    nameErrorRequiredText: string;
    nameErrorMinLengthText: string;
    nameErrorMaxLengthText: string;
    emailText: string;
    emailErrorRequiredText: string;
    emailErrorPatternText: string;
    passwordText: string;
    passwordErrorRequiredText: string;
    passwordErrorMinLengthText: string;
    passwordErrorMaxLengthText: string;
    registerTabText: string;
    registerCardTitleText: string;
    registerButtonText: string;
    guestButtonText: string;
    emailConfirmationTitle: string;
    emailConfirmationText: string;
    authProvider: typeof AuthProvider;
    passwordResetWished: boolean;
    signInFormGroup: FormGroup;
    signUpFormGroup: FormGroup;
    resetPasswordFormGroup: FormGroup;
    onErrorSubscription: Subscription;
    authenticationError: boolean;
    passReset: boolean;
    dialogRef: MatDialogRef<LegalityDialogComponent>;
    authProviders: typeof AuthProvider;
    signInEmailFormControl: AbstractControl;
    sigInPasswordFormControl: AbstractControl;
    sigUpNameFormControl: AbstractControl;
    sigUpEmailFormControl: AbstractControl;
    sigUpPasswordFormControl: AbstractControl;
    sigUpPasswordConfirmationFormControl: AbstractControl;
    resetPasswordEmailFormControl: AbstractControl;
    constructor(platformId: Object, config: NgxAuthFirebaseUIConfig, auth: AngularFireAuth, authProcess: AuthProcessService, dialog: MatDialog, activatedRoute: ActivatedRoute, changeDetectorRef: ChangeDetectorRef);
    get color(): string | ThemePalette;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    onTabChange(event: MatTabChangeEvent): void;
    signOut(): Promise<void>;
    signIn(): Promise<void>;
    updateAuthSnackbarMessages(): void;
    createForgotPasswordTab(): void;
    processLegalSignUP(authProvider?: AuthProvider): void;
    signUp(): Promise<void>;
    signUpAnonymously(): Promise<void>;
    resetPassword(): void;
    private chooseBackUrl;
    private _initSignInFormGroupBuilder;
    private _initSignUpFormGroupBuilder;
    private _initResetPasswordFormGroupBuilder;
    private _afterSignUpMiddleware;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AuthComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AuthComponent, "ngx-auth-firebaseui", never, {
    "providers": "providers";
    "registrationEnabled": "registrationEnabled";
    "resetPasswordEnabled": "resetPasswordEnabled";
    "guestEnabled": "guestEnabled";
    "enableLengthRule": "enableLengthRule";
    "enableLowerCaseLetterRule": "enableLowerCaseLetterRule";
    "enableUpperCaseLetterRule": "enableUpperCaseLetterRule";
    "enableDigitRule": "enableDigitRule";
    "enableSpecialCharRule": "enableSpecialCharRule";
    "verifyEmailGoBackText": "verifyEmailGoBackText";
    "signOutText": "signOutText";
    "resetPasswordTabText": "resetPasswordTabText";
    "resetPasswordInputText": "resetPasswordInputText";
    "resetPasswordErrorRequiredText": "resetPasswordErrorRequiredText";
    "resetPasswordErrorPatternText": "resetPasswordErrorPatternText";
    "resetPasswordActionButtonText": "resetPasswordActionButtonText";
    "resetPasswordInstructionsText": "resetPasswordInstructionsText";
    "signInTabText": "signInTabText";
    "signInCardTitleText": "signInCardTitleText";
    "loginButtonText": "loginButtonText";
    "forgotPasswordButtonText": "forgotPasswordButtonText";
    "nameText": "nameText";
    "nameErrorRequiredText": "nameErrorRequiredText";
    "nameErrorMinLengthText": "nameErrorMinLengthText";
    "nameErrorMaxLengthText": "nameErrorMaxLengthText";
    "emailText": "emailText";
    "emailErrorRequiredText": "emailErrorRequiredText";
    "emailErrorPatternText": "emailErrorPatternText";
    "passwordText": "passwordText";
    "passwordErrorRequiredText": "passwordErrorRequiredText";
    "passwordErrorMinLengthText": "passwordErrorMinLengthText";
    "passwordErrorMaxLengthText": "passwordErrorMaxLengthText";
    "registerTabText": "registerTabText";
    "registerCardTitleText": "registerCardTitleText";
    "registerButtonText": "registerButtonText";
    "guestButtonText": "guestButtonText";
    "emailConfirmationTitle": "emailConfirmationTitle";
    "emailConfirmationText": "emailConfirmationText";
    "min": "min";
    "max": "max";
    "goBackURL": "goBackURL";
    "tabIndex": "tabIndex";
    "providersTheme": "providersTheme";
    "appearance": "appearance";
    "tosUrl": "tosUrl";
    "privacyPolicyUrl": "privacyPolicyUrl";
    "messageOnAuthSuccess": "messageOnAuthSuccess";
    "messageOnAuthError": "messageOnAuthError";
    "messageOnEmailConfirmationSuccess": "messageOnEmailConfirmationSuccess";
    "customValidator": "customValidator";
    "verifyEmailTemplate": "verifyEmailTemplate";
    "verifyEmailTitleText": "verifyEmailTitleText";
    "verifyEmailConfirmationText": "verifyEmailConfirmationText";
    "sendNewVerificationEmailText": "sendNewVerificationEmailText";
}, {
    "selectedTabChange": "selectedTabChange";
    "onStrengthChanged": "onStrengthChanged";
    "onSuccess": "onSuccess";
    "onError": "onError";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiYXV0aC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7QUFhQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE0R0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBDaGFuZ2VEZXRlY3RvclJlZiwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBTaW1wbGVDaGFuZ2VzLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sLCBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBNYXRUYWJDaGFuZ2VFdmVudCwgTWF0VGFiR3JvdXAgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC90YWJzJztcbmltcG9ydCB7IFRoZW1lUGFsZXR0ZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NvcmUnO1xuaW1wb3J0IHsgTWF0RGlhbG9nLCBNYXREaWFsb2dSZWYgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9kaWFsb2cnO1xuaW1wb3J0IHsgTWF0Rm9ybUZpZWxkQXBwZWFyYW5jZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2Zvcm0tZmllbGQnO1xuaW1wb3J0IHsgQW5ndWxhckZpcmVBdXRoIH0gZnJvbSAnQGFuZ3VsYXIvZmlyZS9hdXRoJztcbmltcG9ydCB7IE1hdFBhc3N3b3JkU3RyZW5ndGhDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci1tYXRlcmlhbC1leHRlbnNpb25zL3Bhc3N3b3JkLXN0cmVuZ3RoJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMvaW50ZXJuYWwvU3Vic2NyaXB0aW9uJztcbmltcG9ydCB7IExlZ2FsaXR5RGlhbG9nQ29tcG9uZW50LCBUaGVtZSB9IGZyb20gJy4uJztcbmltcG9ydCB7IE5neEF1dGhGaXJlYmFzZVVJQ29uZmlnIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBBdXRoUHJvY2Vzc1NlcnZpY2UsIEF1dGhQcm92aWRlciB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2F1dGgtcHJvY2Vzcy5zZXJ2aWNlJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IEVNQUlMX1JFR0VYOiBSZWdFeHA7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBQSE9ORV9OVU1CRVJfUkVHRVg6IFJlZ0V4cDtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEF1dGhDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyVmlld0luaXQsIE9uQ2hhbmdlcywgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHBsYXRmb3JtSWQ7XG4gICAgY29uZmlnOiBOZ3hBdXRoRmlyZWJhc2VVSUNvbmZpZztcbiAgICBhdXRoOiBBbmd1bGFyRmlyZUF1dGg7XG4gICAgYXV0aFByb2Nlc3M6IEF1dGhQcm9jZXNzU2VydmljZTtcbiAgICBkaWFsb2c6IE1hdERpYWxvZztcbiAgICBwcml2YXRlIGFjdGl2YXRlZFJvdXRlO1xuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3JSZWY7XG4gICAgbWF0VGFiR3JvdXA6IE1hdFRhYkdyb3VwO1xuICAgIHBhc3N3b3JkU3RyZW5ndGg6IE1hdFBhc3N3b3JkU3RyZW5ndGhDb21wb25lbnQ7XG4gICAgaXNMb2FkaW5nOiBib29sZWFuO1xuICAgIHByb3ZpZGVyczogQXV0aFByb3ZpZGVyW10gfCBBdXRoUHJvdmlkZXI7XG4gICAgcHJvdmlkZXJzVGhlbWU6IFRoZW1lO1xuICAgIGFwcGVhcmFuY2U6IE1hdEZvcm1GaWVsZEFwcGVhcmFuY2U7XG4gICAgdGFiSW5kZXg6IG51bWJlciB8IG51bGw7XG4gICAgcmVnaXN0cmF0aW9uRW5hYmxlZDogYm9vbGVhbjtcbiAgICByZXNldFBhc3N3b3JkRW5hYmxlZDogYm9vbGVhbjtcbiAgICBndWVzdEVuYWJsZWQ6IGJvb2xlYW47XG4gICAgdG9zVXJsOiBzdHJpbmc7XG4gICAgcHJpdmFjeVBvbGljeVVybDogc3RyaW5nO1xuICAgIGdvQmFja1VSTDogc3RyaW5nO1xuICAgIG1lc3NhZ2VPbkF1dGhTdWNjZXNzOiBzdHJpbmc7XG4gICAgbWVzc2FnZU9uQXV0aEVycm9yOiBzdHJpbmc7XG4gICAgbWVzc2FnZU9uRW1haWxDb25maXJtYXRpb25TdWNjZXNzOiBzdHJpbmc7XG4gICAgb25TdWNjZXNzOiBhbnk7XG4gICAgb25FcnJvcjogYW55O1xuICAgIHNlbGVjdGVkVGFiQ2hhbmdlOiBFdmVudEVtaXR0ZXI8TWF0VGFiQ2hhbmdlRXZlbnQ+O1xuICAgIGVuYWJsZUxlbmd0aFJ1bGU6IGJvb2xlYW47XG4gICAgZW5hYmxlTG93ZXJDYXNlTGV0dGVyUnVsZTogYm9vbGVhbjtcbiAgICBlbmFibGVVcHBlckNhc2VMZXR0ZXJSdWxlOiBib29sZWFuO1xuICAgIGVuYWJsZURpZ2l0UnVsZTogYm9vbGVhbjtcbiAgICBlbmFibGVTcGVjaWFsQ2hhclJ1bGU6IGJvb2xlYW47XG4gICAgbWluOiBudW1iZXI7XG4gICAgbWF4OiBudW1iZXI7XG4gICAgY3VzdG9tVmFsaWRhdG9yOiBSZWdFeHA7XG4gICAgb25TdHJlbmd0aENoYW5nZWQ6IEV2ZW50RW1pdHRlcjxudW1iZXI+O1xuICAgIHZlcmlmeUVtYWlsVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gICAgdmVyaWZ5RW1haWxUaXRsZVRleHQ6IHN0cmluZztcbiAgICB2ZXJpZnlFbWFpbENvbmZpcm1hdGlvblRleHQ6IHN0cmluZztcbiAgICB2ZXJpZnlFbWFpbEdvQmFja1RleHQ6IHN0cmluZztcbiAgICBzZW5kTmV3VmVyaWZpY2F0aW9uRW1haWxUZXh0OiBzdHJpbmc7XG4gICAgc2lnbk91dFRleHQ6IHN0cmluZztcbiAgICByZXNldFBhc3N3b3JkVGFiVGV4dDogc3RyaW5nO1xuICAgIHJlc2V0UGFzc3dvcmRJbnB1dFRleHQ6IHN0cmluZztcbiAgICByZXNldFBhc3N3b3JkRXJyb3JSZXF1aXJlZFRleHQ6IHN0cmluZztcbiAgICByZXNldFBhc3N3b3JkRXJyb3JQYXR0ZXJuVGV4dDogc3RyaW5nO1xuICAgIHJlc2V0UGFzc3dvcmRBY3Rpb25CdXR0b25UZXh0OiBzdHJpbmc7XG4gICAgcmVzZXRQYXNzd29yZEluc3RydWN0aW9uc1RleHQ6IHN0cmluZztcbiAgICBzaWduSW5UYWJUZXh0OiBzdHJpbmc7XG4gICAgc2lnbkluQ2FyZFRpdGxlVGV4dDogc3RyaW5nO1xuICAgIGxvZ2luQnV0dG9uVGV4dDogc3RyaW5nO1xuICAgIGZvcmdvdFBhc3N3b3JkQnV0dG9uVGV4dDogc3RyaW5nO1xuICAgIG5hbWVUZXh0OiBzdHJpbmc7XG4gICAgbmFtZUVycm9yUmVxdWlyZWRUZXh0OiBzdHJpbmc7XG4gICAgbmFtZUVycm9yTWluTGVuZ3RoVGV4dDogc3RyaW5nO1xuICAgIG5hbWVFcnJvck1heExlbmd0aFRleHQ6IHN0cmluZztcbiAgICBlbWFpbFRleHQ6IHN0cmluZztcbiAgICBlbWFpbEVycm9yUmVxdWlyZWRUZXh0OiBzdHJpbmc7XG4gICAgZW1haWxFcnJvclBhdHRlcm5UZXh0OiBzdHJpbmc7XG4gICAgcGFzc3dvcmRUZXh0OiBzdHJpbmc7XG4gICAgcGFzc3dvcmRFcnJvclJlcXVpcmVkVGV4dDogc3RyaW5nO1xuICAgIHBhc3N3b3JkRXJyb3JNaW5MZW5ndGhUZXh0OiBzdHJpbmc7XG4gICAgcGFzc3dvcmRFcnJvck1heExlbmd0aFRleHQ6IHN0cmluZztcbiAgICByZWdpc3RlclRhYlRleHQ6IHN0cmluZztcbiAgICByZWdpc3RlckNhcmRUaXRsZVRleHQ6IHN0cmluZztcbiAgICByZWdpc3RlckJ1dHRvblRleHQ6IHN0cmluZztcbiAgICBndWVzdEJ1dHRvblRleHQ6IHN0cmluZztcbiAgICBlbWFpbENvbmZpcm1hdGlvblRpdGxlOiBzdHJpbmc7XG4gICAgZW1haWxDb25maXJtYXRpb25UZXh0OiBzdHJpbmc7XG4gICAgYXV0aFByb3ZpZGVyOiB0eXBlb2YgQXV0aFByb3ZpZGVyO1xuICAgIHBhc3N3b3JkUmVzZXRXaXNoZWQ6IGJvb2xlYW47XG4gICAgc2lnbkluRm9ybUdyb3VwOiBGb3JtR3JvdXA7XG4gICAgc2lnblVwRm9ybUdyb3VwOiBGb3JtR3JvdXA7XG4gICAgcmVzZXRQYXNzd29yZEZvcm1Hcm91cDogRm9ybUdyb3VwO1xuICAgIG9uRXJyb3JTdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgICBhdXRoZW50aWNhdGlvbkVycm9yOiBib29sZWFuO1xuICAgIHBhc3NSZXNldDogYm9vbGVhbjtcbiAgICBkaWFsb2dSZWY6IE1hdERpYWxvZ1JlZjxMZWdhbGl0eURpYWxvZ0NvbXBvbmVudD47XG4gICAgYXV0aFByb3ZpZGVyczogdHlwZW9mIEF1dGhQcm92aWRlcjtcbiAgICBzaWduSW5FbWFpbEZvcm1Db250cm9sOiBBYnN0cmFjdENvbnRyb2w7XG4gICAgc2lnSW5QYXNzd29yZEZvcm1Db250cm9sOiBBYnN0cmFjdENvbnRyb2w7XG4gICAgc2lnVXBOYW1lRm9ybUNvbnRyb2w6IEFic3RyYWN0Q29udHJvbDtcbiAgICBzaWdVcEVtYWlsRm9ybUNvbnRyb2w6IEFic3RyYWN0Q29udHJvbDtcbiAgICBzaWdVcFBhc3N3b3JkRm9ybUNvbnRyb2w6IEFic3RyYWN0Q29udHJvbDtcbiAgICBzaWdVcFBhc3N3b3JkQ29uZmlybWF0aW9uRm9ybUNvbnRyb2w6IEFic3RyYWN0Q29udHJvbDtcbiAgICByZXNldFBhc3N3b3JkRW1haWxGb3JtQ29udHJvbDogQWJzdHJhY3RDb250cm9sO1xuICAgIGNvbnN0cnVjdG9yKHBsYXRmb3JtSWQ6IE9iamVjdCwgY29uZmlnOiBOZ3hBdXRoRmlyZWJhc2VVSUNvbmZpZywgYXV0aDogQW5ndWxhckZpcmVBdXRoLCBhdXRoUHJvY2VzczogQXV0aFByb2Nlc3NTZXJ2aWNlLCBkaWFsb2c6IE1hdERpYWxvZywgYWN0aXZhdGVkUm91dGU6IEFjdGl2YXRlZFJvdXRlLCBjaGFuZ2VEZXRlY3RvclJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIGdldCBjb2xvcigpOiBzdHJpbmcgfCBUaGVtZVBhbGV0dGU7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG9uVGFiQ2hhbmdlKGV2ZW50OiBNYXRUYWJDaGFuZ2VFdmVudCk6IHZvaWQ7XG4gICAgc2lnbk91dCgpOiBQcm9taXNlPHZvaWQ+O1xuICAgIHNpZ25JbigpOiBQcm9taXNlPHZvaWQ+O1xuICAgIHVwZGF0ZUF1dGhTbmFja2Jhck1lc3NhZ2VzKCk6IHZvaWQ7XG4gICAgY3JlYXRlRm9yZ290UGFzc3dvcmRUYWIoKTogdm9pZDtcbiAgICBwcm9jZXNzTGVnYWxTaWduVVAoYXV0aFByb3ZpZGVyPzogQXV0aFByb3ZpZGVyKTogdm9pZDtcbiAgICBzaWduVXAoKTogUHJvbWlzZTx2b2lkPjtcbiAgICBzaWduVXBBbm9ueW1vdXNseSgpOiBQcm9taXNlPHZvaWQ+O1xuICAgIHJlc2V0UGFzc3dvcmQoKTogdm9pZDtcbiAgICBwcml2YXRlIGNob29zZUJhY2tVcmw7XG4gICAgcHJpdmF0ZSBfaW5pdFNpZ25JbkZvcm1Hcm91cEJ1aWxkZXI7XG4gICAgcHJpdmF0ZSBfaW5pdFNpZ25VcEZvcm1Hcm91cEJ1aWxkZXI7XG4gICAgcHJpdmF0ZSBfaW5pdFJlc2V0UGFzc3dvcmRGb3JtR3JvdXBCdWlsZGVyO1xuICAgIHByaXZhdGUgX2FmdGVyU2lnblVwTWlkZGxld2FyZTtcbn1cbiJdfQ==