import { EventEmitter, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { AuthProcessService, AuthProvider } from '../../services/auth-process.service';
import { Subscription } from 'rxjs';
import { MatFormFieldAppearance } from '@angular/material/form-field';
import { ThemePalette } from '@angular/material/core';
import * as ɵngcc0 from '@angular/core';
export declare class NgxAuthFirebaseuiLoginComponent implements OnInit {
    private platformId;
    authProcess: AuthProcessService;
    private formBuilder;
    logoUrl: string;
    providers: string[] | string;
    appearance: MatFormFieldAppearance;
    registrationEnabled: boolean;
    resetPasswordEnabled: boolean;
    messageOnAuthSuccess: string;
    messageOnAuthError: string;
    titleText: string;
    rememberMeText: string;
    loginButtonText: string;
    orLabelText: string;
    forgotPasswordText: string;
    dontHaveAnAccountText: string;
    createAccountButtonText: string;
    emailText: string;
    emailErrorRequiredText: string;
    emailErrorPatternText: string;
    passwordText: string;
    passwordErrorRequiredText: string;
    onSuccess: any;
    onError: any;
    onCreateAccountRequested: EventEmitter<void>;
    onResetPasswordRequested: EventEmitter<void>;
    loginForm: FormGroup;
    authProviders: typeof AuthProvider;
    onErrorSubscription: Subscription;
    authenticationError: boolean;
    constructor(platformId: Object, authProcess: AuthProcessService, formBuilder: FormBuilder);
    get color(): string | ThemePalette;
    get colorAccent(): string | ThemePalette;
    ngOnInit(): void;
    updateAuthSnackbarMessages(): void;
    login(): Promise<void>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgxAuthFirebaseuiLoginComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgxAuthFirebaseuiLoginComponent, "ngx-auth-firebaseui-login", never, {
    "providers": "providers";
    "registrationEnabled": "registrationEnabled";
    "resetPasswordEnabled": "resetPasswordEnabled";
    "titleText": "titleText";
    "rememberMeText": "rememberMeText";
    "loginButtonText": "loginButtonText";
    "orLabelText": "orLabelText";
    "forgotPasswordText": "forgotPasswordText";
    "dontHaveAnAccountText": "dontHaveAnAccountText";
    "createAccountButtonText": "createAccountButtonText";
    "emailText": "emailText";
    "emailErrorRequiredText": "emailErrorRequiredText";
    "emailErrorPatternText": "emailErrorPatternText";
    "passwordText": "passwordText";
    "passwordErrorRequiredText": "passwordErrorRequiredText";
    "logoUrl": "logoUrl";
    "appearance": "appearance";
    "messageOnAuthSuccess": "messageOnAuthSuccess";
    "messageOnAuthError": "messageOnAuthError";
}, {
    "onCreateAccountRequested": "onCreateAccountRequested";
    "onResetPasswordRequested": "onResetPasswordRequested";
    "onSuccess": "onSuccess";
    "onError": "onError";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWF1dGgtZmlyZWJhc2V1aS1sb2dpbi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibmd4LWF1dGgtZmlyZWJhc2V1aS1sb2dpbi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQU1BOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1CdWlsZGVyLCBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBBdXRoUHJvY2Vzc1NlcnZpY2UsIEF1dGhQcm92aWRlciB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2F1dGgtcHJvY2Vzcy5zZXJ2aWNlJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTWF0Rm9ybUZpZWxkQXBwZWFyYW5jZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2Zvcm0tZmllbGQnO1xuaW1wb3J0IHsgVGhlbWVQYWxldHRlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY29yZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ3hBdXRoRmlyZWJhc2V1aUxvZ2luQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBwcml2YXRlIHBsYXRmb3JtSWQ7XG4gICAgYXV0aFByb2Nlc3M6IEF1dGhQcm9jZXNzU2VydmljZTtcbiAgICBwcml2YXRlIGZvcm1CdWlsZGVyO1xuICAgIGxvZ29Vcmw6IHN0cmluZztcbiAgICBwcm92aWRlcnM6IHN0cmluZ1tdIHwgc3RyaW5nO1xuICAgIGFwcGVhcmFuY2U6IE1hdEZvcm1GaWVsZEFwcGVhcmFuY2U7XG4gICAgcmVnaXN0cmF0aW9uRW5hYmxlZDogYm9vbGVhbjtcbiAgICByZXNldFBhc3N3b3JkRW5hYmxlZDogYm9vbGVhbjtcbiAgICBtZXNzYWdlT25BdXRoU3VjY2Vzczogc3RyaW5nO1xuICAgIG1lc3NhZ2VPbkF1dGhFcnJvcjogc3RyaW5nO1xuICAgIHRpdGxlVGV4dDogc3RyaW5nO1xuICAgIHJlbWVtYmVyTWVUZXh0OiBzdHJpbmc7XG4gICAgbG9naW5CdXR0b25UZXh0OiBzdHJpbmc7XG4gICAgb3JMYWJlbFRleHQ6IHN0cmluZztcbiAgICBmb3Jnb3RQYXNzd29yZFRleHQ6IHN0cmluZztcbiAgICBkb250SGF2ZUFuQWNjb3VudFRleHQ6IHN0cmluZztcbiAgICBjcmVhdGVBY2NvdW50QnV0dG9uVGV4dDogc3RyaW5nO1xuICAgIGVtYWlsVGV4dDogc3RyaW5nO1xuICAgIGVtYWlsRXJyb3JSZXF1aXJlZFRleHQ6IHN0cmluZztcbiAgICBlbWFpbEVycm9yUGF0dGVyblRleHQ6IHN0cmluZztcbiAgICBwYXNzd29yZFRleHQ6IHN0cmluZztcbiAgICBwYXNzd29yZEVycm9yUmVxdWlyZWRUZXh0OiBzdHJpbmc7XG4gICAgb25TdWNjZXNzOiBhbnk7XG4gICAgb25FcnJvcjogYW55O1xuICAgIG9uQ3JlYXRlQWNjb3VudFJlcXVlc3RlZDogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuICAgIG9uUmVzZXRQYXNzd29yZFJlcXVlc3RlZDogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuICAgIGxvZ2luRm9ybTogRm9ybUdyb3VwO1xuICAgIGF1dGhQcm92aWRlcnM6IHR5cGVvZiBBdXRoUHJvdmlkZXI7XG4gICAgb25FcnJvclN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuICAgIGF1dGhlbnRpY2F0aW9uRXJyb3I6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IocGxhdGZvcm1JZDogT2JqZWN0LCBhdXRoUHJvY2VzczogQXV0aFByb2Nlc3NTZXJ2aWNlLCBmb3JtQnVpbGRlcjogRm9ybUJ1aWxkZXIpO1xuICAgIGdldCBjb2xvcigpOiBzdHJpbmcgfCBUaGVtZVBhbGV0dGU7XG4gICAgZ2V0IGNvbG9yQWNjZW50KCk6IHN0cmluZyB8IFRoZW1lUGFsZXR0ZTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIHVwZGF0ZUF1dGhTbmFja2Jhck1lc3NhZ2VzKCk6IHZvaWQ7XG4gICAgbG9naW4oKTogUHJvbWlzZTx2b2lkPjtcbn1cbiJdfQ==