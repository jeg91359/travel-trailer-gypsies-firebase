import { __awaiter, __decorate, __param } from "tslib";
import { Component, EventEmitter, Inject, Input, Output, PLATFORM_ID, ViewEncapsulation } from '@angular/core';
import { AbstractControl, FormBuilder, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/internal/operators';
import { NgxAuthFirebaseuiAnimations } from '../../animations';
import { AuthProcessService } from '../../services/auth-process.service';
import { isPlatformBrowser } from '@angular/common';
export const confirmPasswordValidator = (control) => {
    if (!control.parent || !control) {
        return null;
    }
    const password = control.parent.get('password');
    const passwordConfirm = control.parent.get('passwordConfirm');
    if (!password || !passwordConfirm) {
        return null;
    }
    if (passwordConfirm.value === '') {
        return null;
    }
    if (password.value === passwordConfirm.value) {
        return null;
    }
    return { passwordsNotMatching: true };
};
let NgxAuthFirebaseuiRegisterComponent = class NgxAuthFirebaseuiRegisterComponent {
    // tslint:disable-next-line:ban-types
    constructor(platformId, formBuilder, authProcess) {
        // Configure the layout
        this.platformId = platformId;
        this.formBuilder = formBuilder;
        this.authProcess = authProcess;
        // i18n common
        this.titleText = 'CREATE AN ACCOUNT';
        this.readAncAcceptText = 'I read and accept';
        this.termsAndConditionsText = 'terms and conditions';
        this.createAccountButtonText = 'CREATE AN ACCOUNT';
        this.alreadyHaveAccountText = 'Already have an account?';
        this.loginButtonText = 'LOGIN';
        // i18n emnameail
        this.nameText = 'Name';
        this.nameErrorRequiredText = 'Name is required';
        // i18n email
        this.emailText = 'Email';
        this.emailErrorRequiredText = 'Email is required';
        this.emailErrorPatternText = 'Please enter a valid email address';
        // i18n password
        this.passwordText = 'Password';
        this.passwordErrorRequiredText = 'Password is required';
        this.passwordConfirmationText = 'Password Confirmation';
        this.passwordConfirmationErrorRequiredText = 'Password confirmation is required';
        this.passwordErrorMatchText = 'Password must match';
        // tslint:disable-next-line:no-output-on-prefix
        this.onLoginRequested = new EventEmitter();
        this.authenticationError = false;
        // Set the private defaults
        this.unsubscribeAll = new Subject();
        this.onSuccess = authProcess.onSuccessEmitter;
        this.onError = authProcess.onErrorEmitter;
    }
    get color() {
        return this.authenticationError ? 'warn' : 'primary';
    }
    get colorAccent() {
        return this.authenticationError ? 'warn' : 'accent';
    }
    ngOnInit() {
        if (isPlatformBrowser(this.platformId)) {
            this.onErrorSubscription = this.onError.subscribe(() => this.authenticationError = true);
        }
        this.registerForm = this.formBuilder.group({
            name: ['', Validators.required],
            email: ['', [Validators.required, Validators.email]],
            password: ['', Validators.required],
            passwordConfirm: ['', [Validators.required, confirmPasswordValidator]]
        });
        // Update the validity of the 'passwordConfirm' field
        // when the 'password' field changes
        this.registerForm
            .controls
            .password
            .valueChanges.pipe(takeUntil(this.unsubscribeAll))
            .subscribe(() => {
            this.registerForm.controls.passwordConfirm.updateValueAndValidity();
        });
    }
    /**
     * On destroy
     */
    ngOnDestroy() {
        // Unsubscribe from all subscriptions
        this.unsubscribeAll.next();
        this.unsubscribeAll.complete();
    }
    createAccount() {
        return __awaiter(this, void 0, void 0, function* () {
            return yield this.authProcess.signUp(this.registerForm.controls.name.value, {
                email: this.registerForm.controls.email.value,
                password: this.registerForm.controls.password.value
            });
        });
    }
};
NgxAuthFirebaseuiRegisterComponent.ctorParameters = () => [
    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },
    { type: FormBuilder },
    { type: AuthProcessService }
];
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "logoUrl", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "appearance", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "tosUrl", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "privacyPolicyUrl", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "titleText", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "readAncAcceptText", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "termsAndConditionsText", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "createAccountButtonText", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "alreadyHaveAccountText", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "loginButtonText", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "nameText", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "nameErrorRequiredText", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "emailText", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "emailErrorRequiredText", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "emailErrorPatternText", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "passwordText", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "passwordErrorRequiredText", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "passwordConfirmationText", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "passwordConfirmationErrorRequiredText", void 0);
__decorate([
    Input()
], NgxAuthFirebaseuiRegisterComponent.prototype, "passwordErrorMatchText", void 0);
__decorate([
    Output()
], NgxAuthFirebaseuiRegisterComponent.prototype, "onSuccess", void 0);
__decorate([
    Output()
], NgxAuthFirebaseuiRegisterComponent.prototype, "onError", void 0);
__decorate([
    Output()
], NgxAuthFirebaseuiRegisterComponent.prototype, "onLoginRequested", void 0);
NgxAuthFirebaseuiRegisterComponent = __decorate([
    Component({
        selector: 'ngx-auth-firebaseui-register',
        template: "<div fxLayout=\"column\" id=\"register\">\n\n  <div fxLayout=\"column\" fxLayoutAlign=\"center center\" id=\"register-form-wrapper\">\n\n    <div [@animateStagger]=\"{ value: '50' }\" id=\"register-form\">\n\n      <div *ngIf=\"logoUrl\" class=\"logo\">\n        <img [@animate]=\"{ value: '*', params: { x: '50px' } }\" [src]=\"logoUrl\" alt=\"logo\">\n      </div>\n\n      <div [@animate]=\"{ value: '*', params: { x: '-50px' } }\" class=\"title\">{{titleText}}</div>\n\n      <form [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\" [formGroup]=\"registerForm\" name=\"registerForm\"\n            novalidate>\n\n        <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\" [appearance]=\"appearance\">\n          <input [placeholder]=\"nameText\" formControlName=\"name\" matInput/>\n          <mat-icon [color]=\"color\" matSuffix>person</mat-icon>\n          <mat-error>\n            {{nameErrorRequiredText}}\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\" [appearance]=\"appearance\">\n          <input [placeholder]=\"emailText\" formControlName=\"email\" matInput/>\n          <mat-icon [color]=\"color\" matSuffix>email</mat-icon>\n          <mat-error *ngIf=\"registerForm.get('email')?.hasError('required')\">\n            {{emailErrorRequiredText}}\n          </mat-error>\n          <mat-error *ngIf=\"registerForm.get('email')?.hasError('email')\">\n            {{emailErrorPatternText}}\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\" [appearance]=\"appearance\">\n          <input [placeholder]=\"passwordText\" formControlName=\"password\" matInput type=\"password\"/>\n          <mat-icon [color]=\"color\" matSuffix>lock</mat-icon>\n          <mat-error>\n            {{passwordErrorRequiredText}}\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field [@animate]=\"{ value: '*', params: { x: '50px' } }\" [appearance]=\"appearance\">\n          <input [placeholder]=\"passwordConfirmationText\" formControlName=\"passwordConfirm\" matInput type=\"password\"/>\n          <mat-icon [color]=\"color\" matSuffix>lock</mat-icon>\n          <mat-error *ngIf=\"registerForm.get('passwordConfirm')?.hasError('required')\">\n            {{passwordConfirmationErrorRequiredText}}\n          </mat-error>\n          <mat-error\n            *ngIf=\"\n              !registerForm.get('passwordConfirm')?.hasError('required') &&\n              registerForm.get('passwordConfirm')?.hasError('passwordsNotMatching')\n            \">\n            {{passwordErrorMatchText}}\n          </mat-error>\n        </mat-form-field>\n\n        <!--        <div *ngIf=\"this.tosUrl || this.privacyPolicyUrl\"-->\n        <!--        <div-->\n        <!--          class=\"terms\"-->\n        <!--          fxLayout=\"row\" fxLayoutAlign=\"center center\"-->\n        <!--          [@animate]=\"{value:'*',params:{duration:'250ms',y:'100px'}}\">-->\n        <!--          <mat-checkbox aria-label=\"I read and accept\" name=\"terms\" required>-->\n        <!--            <span>{{readAncAcceptText}}</span>-->\n        <!--            <span>&nbsp;</span>-->\n        <!--            <a target=\"_blank\"-->\n        <!--               [href]=\"this.tosUrl\">-->\n        <!--              Terms of Service and Conditions-->\n        <!--            </a>-->\n        <!--          </mat-checkbox>-->\n        <!--        </div>-->\n\n        <button (click)=\"createAccount()\"\n                [color]=\"colorAccent\"\n                [disabled]=\"registerForm.invalid\"\n                aria-label=\"CREATE AN ACCOUNT\"\n                class=\"submit-button\"\n                id=\"createAccountButton\"\n                mat-raised-button>\n          {{createAccountButtonText}}\n        </button>\n      </form>\n\n      <div [@animate]=\"{value:'*',params:{duration:'300ms',y:'100px'}}\" class=\"register\" fxLayout=\"column\"\n           fxLayoutAlign=\"center center\">\n        <span [@animate]=\"{ value: '*', params: { x: '100px' } }\" class=\"text\">\n          {{alreadyHaveAccountText}}\n        </span>\n        <button (click)=\"onLoginRequested.emit()\"\n                [@animate]=\"{ value: '*', params: { x: '-100px' } }\"\n                [color]=\"colorAccent\"\n                id=\"loginButton\"\n                mat-button\n                type=\"button\">\n          {{loginButtonText}}\n        </button>\n      </div>\n\n    </div>\n  </div>\n</div>\n",
        encapsulation: ViewEncapsulation.None,
        animations: NgxAuthFirebaseuiAnimations,
        styles: ["ngx-auth-firebaseui-register #register{width:100%;background-size:cover}ngx-auth-firebaseui-register #register #register-form-wrapper{flex:1 0 auto;padding:32px}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form{width:384px;max-width:384px;padding:32px;text-align:center}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .logo{width:128px;margin:32px auto}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .title{font-size:20px;margin:16px 0 32px}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form form{width:100%;text-align:left}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form form mat-form-field{width:100%}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form form mat-checkbox{margin:0}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form form .terms{margin:16px 0 32px}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form form .terms a{font-size:16px;margin-left:4px}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form form .submit-button{width:220px;margin:16px auto;display:block}@media screen and (max-width:599px){ngx-auth-firebaseui-register #register #register-form-wrapper{padding:16px}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form{padding:24px;width:100%}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form form .submit-button{width:90%}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form button{width:80%}}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .register{margin:32px auto 24px;font-weight:500}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .register .text{margin-right:8px}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .separator{font-size:15px;font-weight:600;margin:24px auto;position:relative;overflow:hidden;width:100px}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .separator .text{display:inline-flex;position:relative;padding:0 8px;z-index:9999}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .separator .text:after,ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .separator .text:before{content:\"\";display:block;width:30px;position:absolute;top:10px;border-top:1px solid}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .separator .text:before{right:100%}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form .separator .text:after{left:100%}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form button.facebook,ngx-auth-firebaseui-register #register #register-form-wrapper #register-form button.google{width:192px;text-transform:none;color:#fff;font-size:13px}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form button.google{background-color:#d73d32;margin-bottom:8px}ngx-auth-firebaseui-register #register #register-form-wrapper #register-form button.facebook{background-color:#3f5c9a}ngx-auth-firebaseui-register ::ng-deep .mat-checkbox-label{display:flex;flex-wrap:wrap}"]
    }),
    __param(0, Inject(PLATFORM_ID))
], NgxAuthFirebaseuiRegisterComponent);
export { NgxAuthFirebaseuiRegisterComponent };
//# sourceMappingURL=data:application/json;base64,